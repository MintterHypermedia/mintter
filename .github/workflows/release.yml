name: Release

true:
  push:
    tags:
      - desktop/*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    needs: create-release
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
      - name: "Setup Rust"
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: "Setup NodeJS"
        uses: actions/setup-node@v1
        with:
          cache: yarn
          node-version: 16.x
      - name: "Setup Go"
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - if: "matrix.os == 'ubuntu-latest'"
        name: "Install required packages"
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: "Install app dependencies"
        run: yarn
      - env:
          APPLE_CERTIFICATE: "${{ secrets.APPLE_CERTIFICATE }}"
          APPLE_CERTIFICATE_PASSWORD: "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}"
          APPLE_ID: "${{ secrets.APPLE_ID }}"
          APPLE_PASSWORD: "${{ secrets.APPLE_PASSWORD }}"
          APPLE_SIGNING_IDENTITY: "${{ secrets.APPLE_SIGNING_IDENTITY }}"
          ENABLE_CODE_SIGNING: "${{ secrets.APPLE_CERTIFICATE }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        uses: tauri-apps/tauri-action@v0
        with:
          configPath: release.tauri.conf.json
          includeDebug: true
          projectPath: ./desktop/app
          releaseId: "${{ steps.create_release.outputs.id }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    timeout-minutes: 20
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        name: "create release"
        uses: softprops/action-gh-release@master
        with:
          body: ""
          draft: true
  publish:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: create_release
        name: "create release"
        uses: softprops/action-gh-release@master
        with:
          draft: false
