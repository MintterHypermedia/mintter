name: Release

on:
  push:
    tags:
      - "desktop/*.*.*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create release
          id: create_release
          uses: softprops/action-gh-release@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            body: ""
            draft: true

  build-binaries:
    needs: create-release
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable
            override: true
      - uses: Swatinem/rust-cache@v1
      - name: Setup NodeJS
        uses: actions/setup-node@v1
          with:
            node-version: '16.x'
            cache: 'yarn'
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Install required packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Install app dependencies
        run: yarn
      - uses: tauri-apps/tauri-action@v0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
            APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
            APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
            APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
            APPLE_ID: ${{ secrets.APPLE_ID }}
            APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          with:
            projectPath: ./desktop/app
            configPath: release.tauri.conf.json
            includeDebug: true
            releaseId: ${{ steps.create_release.outputs.id }}

  publish:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create release
          id: create_release
          uses: softprops/action-gh-release@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            draft: false