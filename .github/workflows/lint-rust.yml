name: Lint Rust

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/lint-rust.yml'
      - 'Cargo.toml'
      - 'desktop/**'
  pull_request:
    paths:
      - '.github/workflows/lint-rust.yml'
      - 'Cargo.toml'
      - 'desktop/**'
    branches-ignore:
      - 'renovate/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-rust:
    runs-on: ubuntu-latest
    # container: iterpre/tauri
    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: 'Install native packages'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Mock Files
        run: |
          mkdir -p plz-out/bin/backend
          touch plz-out/bin/backend/mintterd-x86_64-unknown-linux-gnu
          mkdir -p plz-out/gen/frontend/dist/client

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args:
            --manifest-path=Cargo.toml --all-targets --all-features -- -D
            warnings
          name: clippy

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path=Cargo.toml --all -- --check

  # lint-go:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         version: latest
  #         only-new-issues: true
  #         args: --timeout=5m
