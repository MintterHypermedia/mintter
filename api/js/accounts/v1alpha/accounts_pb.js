// source: accounts/v1alpha/accounts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.Account', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.AccountEvent', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.AccountEvent.DataCase', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.Device', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.DeviceRegistered', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.GetAccountRequest', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.Profile', null, global);
goog.exportSymbol('proto.com.mintter.accounts.v1alpha.ProfileUpdated', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.GetAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.GetAccountRequest.displayName = 'proto.com.mintter.accounts.v1alpha.GetAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.mintter.accounts.v1alpha.Account.repeatedFields_, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.Account.displayName = 'proto.com.mintter.accounts.v1alpha.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.Profile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.Profile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.Profile.displayName = 'proto.com.mintter.accounts.v1alpha.Profile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.mintter.accounts.v1alpha.Device.repeatedFields_, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.Device.displayName = 'proto.com.mintter.accounts.v1alpha.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.AccountEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.mintter.accounts.v1alpha.AccountEvent.oneofGroups_);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.AccountEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.AccountEvent.displayName = 'proto.com.mintter.accounts.v1alpha.AccountEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.DeviceRegistered, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.DeviceRegistered.displayName = 'proto.com.mintter.accounts.v1alpha.DeviceRegistered';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.accounts.v1alpha.ProfileUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.accounts.v1alpha.ProfileUpdated.displayName = 'proto.com.mintter.accounts.v1alpha.ProfileUpdated';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.GetAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.GetAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.GetAccountRequest}
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.GetAccountRequest;
  return proto.com.mintter.accounts.v1alpha.GetAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.GetAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.GetAccountRequest}
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.GetAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.GetAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.GetAccountRequest} returns this
 */
proto.com.mintter.accounts.v1alpha.GetAccountRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.mintter.accounts.v1alpha.Account.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    profile: (f = msg.getProfile()) && proto.com.mintter.accounts.v1alpha.Profile.toObject(includeInstance, f),
    devicesMap: (f = msg.getDevicesMap()) ? f.toObject(includeInstance, proto.com.mintter.accounts.v1alpha.Device.toObject) : [],
    peersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    followTime: (f = msg.getFollowTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTime: (f = msg.getUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.Account}
 */
proto.com.mintter.accounts.v1alpha.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.Account;
  return proto.com.mintter.accounts.v1alpha.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.Account}
 */
proto.com.mintter.accounts.v1alpha.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.com.mintter.accounts.v1alpha.Profile;
      reader.readMessage(value,proto.com.mintter.accounts.v1alpha.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 3:
      var value = msg.getDevicesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.com.mintter.accounts.v1alpha.Device.deserializeBinaryFromReader, "", new proto.com.mintter.accounts.v1alpha.Device());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPeers(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFollowTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.mintter.accounts.v1alpha.Profile.serializeBinaryToWriter
    );
  }
  f = message.getDevicesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.com.mintter.accounts.v1alpha.Device.serializeBinaryToWriter);
  }
  f = message.getPeersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFollowTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Profile profile = 2;
 * @return {?proto.com.mintter.accounts.v1alpha.Profile}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getProfile = function() {
  return /** @type{?proto.com.mintter.accounts.v1alpha.Profile} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.accounts.v1alpha.Profile, 2));
};


/**
 * @param {?proto.com.mintter.accounts.v1alpha.Profile|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
*/
proto.com.mintter.accounts.v1alpha.Account.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, Device> devices = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.com.mintter.accounts.v1alpha.Device>}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getDevicesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.com.mintter.accounts.v1alpha.Device>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.com.mintter.accounts.v1alpha.Device));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.clearDevicesMap = function() {
  this.getDevicesMap().clear();
  return this;};


/**
 * repeated string peers = 4;
 * @return {!Array<string>}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getPeersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.setPeersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.addPeers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.clearPeersList = function() {
  return this.setPeersList([]);
};


/**
 * optional google.protobuf.Timestamp follow_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getFollowTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
*/
proto.com.mintter.accounts.v1alpha.Account.prototype.setFollowTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.clearFollowTime = function() {
  return this.setFollowTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.hasFollowTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp update_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
*/
proto.com.mintter.accounts.v1alpha.Account.prototype.setUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.Account} returns this
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.clearUpdateTime = function() {
  return this.setUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.Account.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.Profile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.Profile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Profile.toObject = function(includeInstance, msg) {
  var f, obj = {
    alias: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bio: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.Profile}
 */
proto.com.mintter.accounts.v1alpha.Profile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.Profile;
  return proto.com.mintter.accounts.v1alpha.Profile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.Profile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.Profile}
 */
proto.com.mintter.accounts.v1alpha.Profile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBio(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.Profile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.Profile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Profile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string alias = 1;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.Profile} returns this
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bio = 2;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.getBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.Profile} returns this
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.setBio = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.Profile} returns this
 */
proto.com.mintter.accounts.v1alpha.Profile.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.mintter.accounts.v1alpha.Device.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addrsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.Device}
 */
proto.com.mintter.accounts.v1alpha.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.Device;
  return proto.com.mintter.accounts.v1alpha.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.Device}
 */
proto.com.mintter.accounts.v1alpha.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string peer_id = 1;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.getPeerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.accounts.v1alpha.Device} returns this
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string addrs = 2;
 * @return {!Array<string>}
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.getAddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.mintter.accounts.v1alpha.Device} returns this
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.setAddrsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.mintter.accounts.v1alpha.Device} returns this
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.addAddrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.mintter.accounts.v1alpha.Device} returns this
 */
proto.com.mintter.accounts.v1alpha.Device.prototype.clearAddrsList = function() {
  return this.setAddrsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.DataCase = {
  DATA_NOT_SET: 0,
  DEVICE_REGISTERED: 4,
  PROFILED_UPDATED: 5
};

/**
 * @return {proto.com.mintter.accounts.v1alpha.AccountEvent.DataCase}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.getDataCase = function() {
  return /** @type {proto.com.mintter.accounts.v1alpha.AccountEvent.DataCase} */(jspb.Message.computeOneofCase(this, proto.com.mintter.accounts.v1alpha.AccountEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.AccountEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.AccountEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceRegistered: (f = msg.getDeviceRegistered()) && proto.com.mintter.accounts.v1alpha.DeviceRegistered.toObject(includeInstance, f),
    profiledUpdated: (f = msg.getProfiledUpdated()) && proto.com.mintter.accounts.v1alpha.ProfileUpdated.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.AccountEvent;
  return proto.com.mintter.accounts.v1alpha.AccountEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.AccountEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.com.mintter.accounts.v1alpha.DeviceRegistered;
      reader.readMessage(value,proto.com.mintter.accounts.v1alpha.DeviceRegistered.deserializeBinaryFromReader);
      msg.setDeviceRegistered(value);
      break;
    case 5:
      var value = new proto.com.mintter.accounts.v1alpha.ProfileUpdated;
      reader.readMessage(value,proto.com.mintter.accounts.v1alpha.ProfileUpdated.deserializeBinaryFromReader);
      msg.setProfiledUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.AccountEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.AccountEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceRegistered();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.mintter.accounts.v1alpha.DeviceRegistered.serializeBinaryToWriter
    );
  }
  f = message.getProfiledUpdated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.mintter.accounts.v1alpha.ProfileUpdated.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceRegistered device_registered = 4;
 * @return {?proto.com.mintter.accounts.v1alpha.DeviceRegistered}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.getDeviceRegistered = function() {
  return /** @type{?proto.com.mintter.accounts.v1alpha.DeviceRegistered} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.accounts.v1alpha.DeviceRegistered, 4));
};


/**
 * @param {?proto.com.mintter.accounts.v1alpha.DeviceRegistered|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent} returns this
*/
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.setDeviceRegistered = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.com.mintter.accounts.v1alpha.AccountEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent} returns this
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.clearDeviceRegistered = function() {
  return this.setDeviceRegistered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.hasDeviceRegistered = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProfileUpdated profiled_updated = 5;
 * @return {?proto.com.mintter.accounts.v1alpha.ProfileUpdated}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.getProfiledUpdated = function() {
  return /** @type{?proto.com.mintter.accounts.v1alpha.ProfileUpdated} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.accounts.v1alpha.ProfileUpdated, 5));
};


/**
 * @param {?proto.com.mintter.accounts.v1alpha.ProfileUpdated|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent} returns this
*/
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.setProfiledUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.com.mintter.accounts.v1alpha.AccountEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.AccountEvent} returns this
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.clearProfiledUpdated = function() {
  return this.setProfiledUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.AccountEvent.prototype.hasProfiledUpdated = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.DeviceRegistered.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.DeviceRegistered} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.toObject = function(includeInstance, msg) {
  var f, obj = {
    proof: msg.getProof_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.DeviceRegistered}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.DeviceRegistered;
  return proto.com.mintter.accounts.v1alpha.DeviceRegistered.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.DeviceRegistered} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.DeviceRegistered}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.DeviceRegistered.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.DeviceRegistered} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes proof = 1;
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.getProof = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes proof = 1;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.mintter.accounts.v1alpha.DeviceRegistered} returns this
 */
proto.com.mintter.accounts.v1alpha.DeviceRegistered.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.accounts.v1alpha.ProfileUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.accounts.v1alpha.ProfileUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.com.mintter.accounts.v1alpha.Profile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.accounts.v1alpha.ProfileUpdated}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.accounts.v1alpha.ProfileUpdated;
  return proto.com.mintter.accounts.v1alpha.ProfileUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.accounts.v1alpha.ProfileUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.accounts.v1alpha.ProfileUpdated}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.com.mintter.accounts.v1alpha.Profile;
      reader.readMessage(value,proto.com.mintter.accounts.v1alpha.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.accounts.v1alpha.ProfileUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.accounts.v1alpha.ProfileUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.mintter.accounts.v1alpha.Profile.serializeBinaryToWriter
    );
  }
};


/**
 * optional Profile profile = 2;
 * @return {?proto.com.mintter.accounts.v1alpha.Profile}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.getProfile = function() {
  return /** @type{?proto.com.mintter.accounts.v1alpha.Profile} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.accounts.v1alpha.Profile, 2));
};


/**
 * @param {?proto.com.mintter.accounts.v1alpha.Profile|undefined} value
 * @return {!proto.com.mintter.accounts.v1alpha.ProfileUpdated} returns this
*/
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.accounts.v1alpha.ProfileUpdated} returns this
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.accounts.v1alpha.ProfileUpdated.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.mintter.accounts.v1alpha);
