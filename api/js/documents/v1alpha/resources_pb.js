// source: documents/v1alpha/resources.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Block', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Block.ListStyle', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Block.Type', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Document', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Image', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.InlineElement', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.InlineElement.ContentCase', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Link', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Publication', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Quote', null, global);
goog.exportSymbol('proto.com.mintter.documents.v1alpha.Text', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Publication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Publication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Publication.displayName = 'proto.com.mintter.documents.v1alpha.Publication';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.mintter.documents.v1alpha.Document.repeatedFields_, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Document.displayName = 'proto.com.mintter.documents.v1alpha.Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Link.displayName = 'proto.com.mintter.documents.v1alpha.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.mintter.documents.v1alpha.Block.repeatedFields_, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Block.displayName = 'proto.com.mintter.documents.v1alpha.Block';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.InlineElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_);
};
goog.inherits(proto.com.mintter.documents.v1alpha.InlineElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.InlineElement.displayName = 'proto.com.mintter.documents.v1alpha.InlineElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Image.displayName = 'proto.com.mintter.documents.v1alpha.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Quote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Quote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Quote.displayName = 'proto.com.mintter.documents.v1alpha.Quote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.mintter.documents.v1alpha.Text = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.mintter.documents.v1alpha.Text, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.mintter.documents.v1alpha.Text.displayName = 'proto.com.mintter.documents.v1alpha.Text';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Publication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Publication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Publication.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: (f = msg.getDocument()) && proto.com.mintter.documents.v1alpha.Document.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Publication}
 */
proto.com.mintter.documents.v1alpha.Publication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Publication;
  return proto.com.mintter.documents.v1alpha.Publication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Publication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Publication}
 */
proto.com.mintter.documents.v1alpha.Publication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = new proto.com.mintter.documents.v1alpha.Document;
      reader.readMessage(value,proto.com.mintter.documents.v1alpha.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Publication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Publication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Publication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.mintter.documents.v1alpha.Document.serializeBinaryToWriter
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Publication} returns this
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Document document = 2;
 * @return {?proto.com.mintter.documents.v1alpha.Document}
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.getDocument = function() {
  return /** @type{?proto.com.mintter.documents.v1alpha.Document} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.documents.v1alpha.Document, 2));
};


/**
 * @param {?proto.com.mintter.documents.v1alpha.Document|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.Publication} returns this
*/
proto.com.mintter.documents.v1alpha.Publication.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.Publication} returns this
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Publication.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.mintter.documents.v1alpha.Document.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    author: jspb.Message.getFieldWithDefault(msg, 4, ""),
    childrenList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    blocksMap: (f = msg.getBlocksMap()) ? f.toObject(includeInstance, proto.com.mintter.documents.v1alpha.Block.toObject) : [],
    linksMap: (f = msg.getLinksMap()) ? f.toObject(includeInstance, proto.com.mintter.documents.v1alpha.Link.toObject) : [],
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTime: (f = msg.getUpdateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishTime: (f = msg.getPublishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Document}
 */
proto.com.mintter.documents.v1alpha.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Document;
  return proto.com.mintter.documents.v1alpha.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Document}
 */
proto.com.mintter.documents.v1alpha.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addChildren(value);
      break;
    case 6:
      var value = msg.getBlocksMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.com.mintter.documents.v1alpha.Block.deserializeBinaryFromReader, "", new proto.com.mintter.documents.v1alpha.Block());
         });
      break;
    case 7:
      var value = msg.getLinksMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.com.mintter.documents.v1alpha.Link.deserializeBinaryFromReader, "", new proto.com.mintter.documents.v1alpha.Link());
         });
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTime(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getBlocksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.com.mintter.documents.v1alpha.Block.serializeBinaryToWriter);
  }
  f = message.getLinksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.com.mintter.documents.v1alpha.Link.serializeBinaryToWriter);
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string author = 4;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string children = 5;
 * @return {!Array<string>}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getChildrenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.setChildrenList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.addChildren = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * map<string, Block> blocks = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.com.mintter.documents.v1alpha.Block>}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getBlocksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.com.mintter.documents.v1alpha.Block>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      proto.com.mintter.documents.v1alpha.Block));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearBlocksMap = function() {
  this.getBlocksMap().clear();
  return this;};


/**
 * map<string, Link> links = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.com.mintter.documents.v1alpha.Link>}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getLinksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.com.mintter.documents.v1alpha.Link>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.com.mintter.documents.v1alpha.Link));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearLinksMap = function() {
  this.getLinksMap().clear();
  return this;};


/**
 * optional google.protobuf.Timestamp create_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
*/
proto.com.mintter.documents.v1alpha.Document.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp update_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
*/
proto.com.mintter.documents.v1alpha.Document.prototype.setUpdateTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearUpdateTime = function() {
  return this.setUpdateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp publish_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.getPublishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
*/
proto.com.mintter.documents.v1alpha.Document.prototype.setPublishTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.Document} returns this
 */
proto.com.mintter.documents.v1alpha.Document.prototype.clearPublishTime = function() {
  return this.setPublishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Document.prototype.hasPublishTime = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Link}
 */
proto.com.mintter.documents.v1alpha.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Link;
  return proto.com.mintter.documents.v1alpha.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Link}
 */
proto.com.mintter.documents.v1alpha.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Link.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Link} returns this
 */
proto.com.mintter.documents.v1alpha.Link.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content_type = 2;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Link.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Link} returns this
 */
proto.com.mintter.documents.v1alpha.Link.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.mintter.documents.v1alpha.Block.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Block.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parent: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.com.mintter.documents.v1alpha.InlineElement.toObject, includeInstance),
    childListStyle: jspb.Message.getFieldWithDefault(msg, 5, 0),
    childrenList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Block}
 */
proto.com.mintter.documents.v1alpha.Block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Block;
  return proto.com.mintter.documents.v1alpha.Block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Block}
 */
proto.com.mintter.documents.v1alpha.Block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 3:
      var value = /** @type {!proto.com.mintter.documents.v1alpha.Block.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.com.mintter.documents.v1alpha.InlineElement;
      reader.readMessage(value,proto.com.mintter.documents.v1alpha.InlineElement.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    case 5:
      var value = /** @type {!proto.com.mintter.documents.v1alpha.Block.ListStyle} */ (reader.readEnum());
      msg.setChildListStyle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.com.mintter.documents.v1alpha.InlineElement.serializeBinaryToWriter
    );
  }
  f = message.getChildListStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.mintter.documents.v1alpha.Block.ListStyle = {
  NONE: 0,
  BULLET: 1,
  NUMBER: 2
};

/**
 * @enum {number}
 */
proto.com.mintter.documents.v1alpha.Block.Type = {
  TYPE_UNSPECIFIED: 0,
  HEADING: 1
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parent = 2;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.com.mintter.documents.v1alpha.Block.Type}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getType = function() {
  return /** @type {!proto.com.mintter.documents.v1alpha.Block.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.com.mintter.documents.v1alpha.Block.Type} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated InlineElement elements = 4;
 * @return {!Array<!proto.com.mintter.documents.v1alpha.InlineElement>}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.com.mintter.documents.v1alpha.InlineElement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.mintter.documents.v1alpha.InlineElement, 4));
};


/**
 * @param {!Array<!proto.com.mintter.documents.v1alpha.InlineElement>} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
*/
proto.com.mintter.documents.v1alpha.Block.prototype.setElementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.com.mintter.documents.v1alpha.InlineElement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.com.mintter.documents.v1alpha.InlineElement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.clearElementsList = function() {
  return this.setElementsList([]);
};


/**
 * optional ListStyle child_list_style = 5;
 * @return {!proto.com.mintter.documents.v1alpha.Block.ListStyle}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getChildListStyle = function() {
  return /** @type {!proto.com.mintter.documents.v1alpha.Block.ListStyle} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.com.mintter.documents.v1alpha.Block.ListStyle} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.setChildListStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated string children = 6;
 * @return {!Array<string>}
 */
proto.com.mintter.documents.v1alpha.Block.prototype.getChildrenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.setChildrenList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.addChildren = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.mintter.documents.v1alpha.Block} returns this
 */
proto.com.mintter.documents.v1alpha.Block.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.com.mintter.documents.v1alpha.InlineElement.ContentCase = {
  CONTENT_NOT_SET: 0,
  TEXT: 1,
  IMAGE: 2,
  QUOTE: 3
};

/**
 * @return {proto.com.mintter.documents.v1alpha.InlineElement.ContentCase}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.getContentCase = function() {
  return /** @type {proto.com.mintter.documents.v1alpha.InlineElement.ContentCase} */(jspb.Message.computeOneofCase(this, proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.InlineElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.InlineElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.InlineElement.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: (f = msg.getText()) && proto.com.mintter.documents.v1alpha.Text.toObject(includeInstance, f),
    image: (f = msg.getImage()) && proto.com.mintter.documents.v1alpha.Image.toObject(includeInstance, f),
    quote: (f = msg.getQuote()) && proto.com.mintter.documents.v1alpha.Quote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement}
 */
proto.com.mintter.documents.v1alpha.InlineElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.InlineElement;
  return proto.com.mintter.documents.v1alpha.InlineElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.InlineElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement}
 */
proto.com.mintter.documents.v1alpha.InlineElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.mintter.documents.v1alpha.Text;
      reader.readMessage(value,proto.com.mintter.documents.v1alpha.Text.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 2:
      var value = new proto.com.mintter.documents.v1alpha.Image;
      reader.readMessage(value,proto.com.mintter.documents.v1alpha.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 3:
      var value = new proto.com.mintter.documents.v1alpha.Quote;
      reader.readMessage(value,proto.com.mintter.documents.v1alpha.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.InlineElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.InlineElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.InlineElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.mintter.documents.v1alpha.Text.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.mintter.documents.v1alpha.Image.serializeBinaryToWriter
    );
  }
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.mintter.documents.v1alpha.Quote.serializeBinaryToWriter
    );
  }
};


/**
 * optional Text text = 1;
 * @return {?proto.com.mintter.documents.v1alpha.Text}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.getText = function() {
  return /** @type{?proto.com.mintter.documents.v1alpha.Text} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.documents.v1alpha.Text, 1));
};


/**
 * @param {?proto.com.mintter.documents.v1alpha.Text|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
*/
proto.com.mintter.documents.v1alpha.InlineElement.prototype.setText = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.hasText = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Image image = 2;
 * @return {?proto.com.mintter.documents.v1alpha.Image}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.getImage = function() {
  return /** @type{?proto.com.mintter.documents.v1alpha.Image} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.documents.v1alpha.Image, 2));
};


/**
 * @param {?proto.com.mintter.documents.v1alpha.Image|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
*/
proto.com.mintter.documents.v1alpha.InlineElement.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.hasImage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Quote quote = 3;
 * @return {?proto.com.mintter.documents.v1alpha.Quote}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.getQuote = function() {
  return /** @type{?proto.com.mintter.documents.v1alpha.Quote} */ (
    jspb.Message.getWrapperField(this, proto.com.mintter.documents.v1alpha.Quote, 3));
};


/**
 * @param {?proto.com.mintter.documents.v1alpha.Quote|undefined} value
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
*/
proto.com.mintter.documents.v1alpha.InlineElement.prototype.setQuote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.mintter.documents.v1alpha.InlineElement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.mintter.documents.v1alpha.InlineElement} returns this
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.InlineElement.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    altText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    linkKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Image}
 */
proto.com.mintter.documents.v1alpha.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Image;
  return proto.com.mintter.documents.v1alpha.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Image}
 */
proto.com.mintter.documents.v1alpha.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAltText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAltText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLinkKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string alt_text = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Image.prototype.getAltText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Image} returns this
 */
proto.com.mintter.documents.v1alpha.Image.prototype.setAltText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string link_key = 2;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Image.prototype.getLinkKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Image} returns this
 */
proto.com.mintter.documents.v1alpha.Image.prototype.setLinkKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Quote.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Quote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Quote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Quote.toObject = function(includeInstance, msg) {
  var f, obj = {
    linkKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Quote}
 */
proto.com.mintter.documents.v1alpha.Quote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Quote;
  return proto.com.mintter.documents.v1alpha.Quote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Quote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Quote}
 */
proto.com.mintter.documents.v1alpha.Quote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Quote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Quote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Quote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Quote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinkKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string link_key = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Quote.prototype.getLinkKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Quote} returns this
 */
proto.com.mintter.documents.v1alpha.Quote.prototype.setLinkKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.toObject = function(opt_includeInstance) {
  return proto.com.mintter.documents.v1alpha.Text.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.mintter.documents.v1alpha.Text} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Text.toObject = function(includeInstance, msg) {
  var f, obj = {
    string: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bold: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    underline: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    linkKey: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.mintter.documents.v1alpha.Text}
 */
proto.com.mintter.documents.v1alpha.Text.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.mintter.documents.v1alpha.Text;
  return proto.com.mintter.documents.v1alpha.Text.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.mintter.documents.v1alpha.Text} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.mintter.documents.v1alpha.Text}
 */
proto.com.mintter.documents.v1alpha.Text.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBold(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnderline(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.mintter.documents.v1alpha.Text.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.mintter.documents.v1alpha.Text} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.mintter.documents.v1alpha.Text.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBold();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUnderline();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLinkKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string string = 1;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Text} returns this
 */
proto.com.mintter.documents.v1alpha.Text.prototype.setString = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool bold = 2;
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.getBold = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.mintter.documents.v1alpha.Text} returns this
 */
proto.com.mintter.documents.v1alpha.Text.prototype.setBold = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool underline = 3;
 * @return {boolean}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.getUnderline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.mintter.documents.v1alpha.Text} returns this
 */
proto.com.mintter.documents.v1alpha.Text.prototype.setUnderline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string link_key = 4;
 * @return {string}
 */
proto.com.mintter.documents.v1alpha.Text.prototype.getLinkKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.mintter.documents.v1alpha.Text} returns this
 */
proto.com.mintter.documents.v1alpha.Text.prototype.setLinkKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.com.mintter.documents.v1alpha);
