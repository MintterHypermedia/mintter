#!/usr/bin/env bash

# This script is an entrypoint for all developer activities in this project.

set -e

[ -z "$DIRENV_DIR" ] && echo "Direnv is not enabled. Fix it first! See README.md for instructions." && exit 1

export WORKDIR=$(cd $(dirname $0) && pwd)

# Command build-backend builds the mintterd binary for the host platform.
build-backend() {
    bazel build //:mintterd
}

# Command build-frontend build a production bundle of the frontend app.
build-frontend() {
    bazel build //frontend:app
}

# Command build-desktop builds a production bundle of the desktop Tauri app for the current platform.
build-desktop() {
    cd frontend/app
    tauri build --debug
}

# Command build-cross builds for all the supported platforms in parallel.
build-cross() {
    bazel build //:cross_compile
}

# Command run-backend will run the backend for development.
run-backend() {
    echo "Please run the frontend in a separate terminal and use it's URL in the browser!"
    exec go run ./backend/cmd/mintterd --no-open-browser $@
}

# Command run-frontend will prepare all the dependencies and run frontend for development.
run-frontend() {
    bazel build //:yarn
    exec yarn app dev $@
}

# Command run-desktop will run Tauri in the dev mode.
run-desktop() {
    # We run tauri directly, not from within yarn to avoid cache invalidation issues.
    # We also remove the previously copied mintterd binaries that Tauri copied,
    # because otherwise we have some strange permission issues on subsequent tauri dev.
    bazel build //:mintterd //:yarn
    cd frontend/app && rm -rf src-tauri/target/debug/mintterd* && tauri dev
}

# Command run will do a production build for the current platform and run the resulting binary.
run() {
    echo "This command is broken right now. Coming soon!"
    exit 1
}

# Command deploy will do a build and deployment to the provided address.
deploy() {
    echo "This command is broken right now. Coming soon!"
    exit 1
    (build linux)
    DEPLOY_ADDR="$1"
    . ./infra/deploy.sh
}

help() {
    cli_name=${0##*/}
    echo "Mintter Dev CLI

Usage: $cli_name [command] [flags...]

Commands:
  build-backend   Build backend binary.
  build-frontend  Build production frontend app.
  build-cross     Cross-compile for all the suppored platforms.
  build-desktop   Build production dekstop bundle for the current application.
  run-backend     Run the backend for development.
  run-frontend    Run the frontend for development.
  run-desktop     Run the desktop app in development mode.
  run             Prepare a production build and run it locally.
  deploy          Build and deploy a production build. Needs 1 argument with the address of the deploy target.
"
}

# When no arguments given show help.
[ -z "$1" ] && help && exit 1

# Treat the first argument as command and pass the rest of the args to the command.
$1 ${@:2}
