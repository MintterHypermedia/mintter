version: "3.8"
networks:
  internal_network:
    driver: bridge # the default
services:
  proxy:
    container_name: ${MTT_SITE_PROXY_CONTAINER_NAME:-PROXY}
    image: caddy:2.6.4
    depends_on:
      - minttersite
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    restart: unless-stopped
    networks:
      - internal_network
    environment:
      - "MTT_SITE_HOSTNAME=${MTT_SITE_HOSTNAME:-http://nextjs}"
      - "MTT_SITE_BACKEND_GRPCWEB_PORT=${MTT_SITE_BACKEND_GRPCWEB_PORT:-56001}"
      - "MTT_SITE_LOCAL_PORT=${MTT_SITE_LOCAL_PORT:-3000}"
    volumes:
      - ${MTT_SITE_WORKSPACE:-~/.mtt-site}/proxy/data:/data
      - ${MTT_SITE_WORKSPACE:-~/.mtt-site}/proxy/config:/config
      - ${MTT_SITE_WORKSPACE:-~/.mtt-site}/proxy/CaddyFile:/etc/caddy/Caddyfile

  nextjs:
    container_name: ${MTT_SITE_NEXTJS_CONTAINER_NAME:-nextjs}
    image: mintter/sitegw:${MTT_SITE_TAG:-latest}
    depends_on:
      - minttersite
    networks:
      - internal_network
    ports:
      - "${MTT_SITE_LOCAL_PORT:-3000}:${MTT_SITE_LOCAL_PORT:-3000}"
    restart: unless-stopped
    volumes:
      - ${MTT_SITE_WORKSPACE:-~/.mtt-site}/nextjs:/data:rw

    environment:
      - "HM_BASE_URL=${MTT_SITE_HOSTNAME:-http://nextjs}"
      - "GRPC_HOST=http://minttersite:${MTT_SITE_BACKEND_GRPCWEB_PORT:-56001}"
      - "NEXT_PUBLIC_LN_HOST=${MTT_SITE_LN_HOST:-https://ln.mintter.com}"

  minttersite:
    image: mintter/mintter-site:${MTT_SITE_TAG:-latest}
    restart: unless-stopped
    container_name: ${MTT_SITE_DAEMON_CONTAINER_NAME:-minttersite}
    ports:
      - "56000:56000"
      - "56000:56000/udp"
    networks:
      - internal_network
    volumes:
      - ${MTT_SITE_WORKSPACE:-~/.mtt-site}/backend:/.mtt-site:rw
    command:
      - "mintter-site"
      - "-data-dir=/.mtt-site"
      - "-lndhub.mainnet"
      - "-p2p.port=56000"
      - "--http.port=${MTT_SITE_BACKEND_GRPCWEB_PORT:-56001}"
      - "-syncing.allow-push=${MTT_SITE_ALLOW_PUSH:-false}"
      - "-grpc.port=56002"
      - "-syncing.no-discovery=${MTT_SITE_NO_DISCOVERY:-true}"
      - "-syncing.no-pull=${MTT_SITE_NO_PULL:-true}"
      - "${MTT_SITE_HOSTNAME:-http://nextjs}"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    profiles:
      - metrics
    networks:
      - internal_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - prometheus-data:/prometheus
      - ${MTT_SITE_MONITORING_WORKDIR:-./monitoring}/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    restart: unless-stopped
    container_name: node_exporter
    profiles:
      - metrics
    command:
      - '--path.rootfs=/host'
    networks:
      - internal_network
    volumes:
      - '/:/host:ro,rslave'

  grafana:
    image: grafana/grafana:main
    restart: unless-stopped
    container_name: grafana
    profiles:
      - metrics
    networks:
      - internal_network
    volumes:
      - grafana-data:/var/lib/grafana
      - ${MTT_SITE_MONITORING_WORKDIR:-./monitoring}/grafana/dashboards:/etc/grafana/dashboards
      - ${MTT_SITE_MONITORING_WORKDIR:-./monitoring}/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_LOG_MODE: console
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_SERVER_HTTP_PORT: ${MTT_SITE_MONITORING_PORT:-3001}
      GF_SERVER_PROTOCOL: "http"
      GF_SERVER_DOMAIN: ${MTT_SITE_DNS:localhost:3001}
      GF_SERVER_ROOT_URL: "${MTT_SITE_HOSTNAME:-http://localhost}/.well-known/metrics"
      GF_SERVER_SERVE_FROM_SUB_PATH: True

volumes:
  grafana-data: {}
  prometheus-data: {}
