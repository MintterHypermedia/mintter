template("stamped_sources") {
  assert(defined(invoker.sources), "Must specify sources for stamped_sources")

  forward_variables_from(invoker, default_forward_vars + [ "inputs" ])

  if (!defined(deps)) {
    deps = []
  }

  cachehash = "//build/tools:cachehash"
  deps += [
    "//build:always",
    cachehash,
  ]

  cachehash_tool =
      rebase_path(get_label_info(cachehash, "target_out_dir")) + "/cachehash"

  cache_file = rebase_path("$target_out_dir/$target_name.cachehash.json")
  out_file = "$target_out_dir/$target_name.sum"
  abs_out_file = rebase_path(out_file)

  # To avoid bash glob expansions we quote each pattern.
  patterns = ""
  foreach(p, invoker.sources) {
    _p = rebase_path(p, src_root)
    patterns += "'$_p' "
  }

  action(target_name) {
    script = "/usr/bin/env"
    metadata = {
      cachehash_manifest = [ cache_file ]
    }
    args = [
      "bash",
      "-c",
      "cd $src_root && exec $cachehash_tool -cache-file=$cache_file -o=$abs_out_file $patterns",
    ]
    outputs = [ out_file ]
  }
}
