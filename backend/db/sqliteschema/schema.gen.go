// Code generated by sqlitegen. DO NOT EDIT.

package sqliteschema

import (
	"mintter/backend/db/sqlitegen"
)

// Table blobs.
const (
	Blobs           sqlitegen.Table  = "blobs"
	BlobsCodec      sqlitegen.Column = "blobs.codec"
	BlobsData       sqlitegen.Column = "blobs.data"
	BlobsID         sqlitegen.Column = "blobs.id"
	BlobsInsertTime sqlitegen.Column = "blobs.insert_time"
	BlobsMultihash  sqlitegen.Column = "blobs.multihash"
	BlobsSize       sqlitegen.Column = "blobs.size"
)

// Table blobs. Plain strings.
const (
	T_Blobs           = "blobs"
	C_BlobsCodec      = "blobs.codec"
	C_BlobsData       = "blobs.data"
	C_BlobsID         = "blobs.id"
	C_BlobsInsertTime = "blobs.insert_time"
	C_BlobsMultihash  = "blobs.multihash"
	C_BlobsSize       = "blobs.size"
)

// Table content_links_view.
const (
	ContentLinksView                    sqlitegen.Table  = "content_links_view"
	ContentLinksViewData                sqlitegen.Column = "content_links_view.data"
	ContentLinksViewRel                 sqlitegen.Column = "content_links_view.rel"
	ContentLinksViewSourceBlob          sqlitegen.Column = "content_links_view.source_blob"
	ContentLinksViewSourceBlobCodec     sqlitegen.Column = "content_links_view.source_blob_codec"
	ContentLinksViewSourceBlobMultihash sqlitegen.Column = "content_links_view.source_blob_multihash"
	ContentLinksViewSourceEID           sqlitegen.Column = "content_links_view.source_eid"
	ContentLinksViewSourceEntity        sqlitegen.Column = "content_links_view.source_entity"
	ContentLinksViewTargetEID           sqlitegen.Column = "content_links_view.target_eid"
	ContentLinksViewTargetEntity        sqlitegen.Column = "content_links_view.target_entity"
)

// Table content_links_view. Plain strings.
const (
	T_ContentLinksView                    = "content_links_view"
	C_ContentLinksViewData                = "content_links_view.data"
	C_ContentLinksViewRel                 = "content_links_view.rel"
	C_ContentLinksViewSourceBlob          = "content_links_view.source_blob"
	C_ContentLinksViewSourceBlobCodec     = "content_links_view.source_blob_codec"
	C_ContentLinksViewSourceBlobMultihash = "content_links_view.source_blob_multihash"
	C_ContentLinksViewSourceEID           = "content_links_view.source_eid"
	C_ContentLinksViewSourceEntity        = "content_links_view.source_entity"
	C_ContentLinksViewTargetEID           = "content_links_view.target_eid"
	C_ContentLinksViewTargetEntity        = "content_links_view.target_entity"
)

// Table global_meta.
const (
	GlobalMeta      sqlitegen.Table  = "global_meta"
	GlobalMetaKey   sqlitegen.Column = "global_meta.key"
	GlobalMetaValue sqlitegen.Column = "global_meta.value"
)

// Table global_meta. Plain strings.
const (
	T_GlobalMeta      = "global_meta"
	C_GlobalMetaKey   = "global_meta.key"
	C_GlobalMetaValue = "global_meta.value"
)

// Table hyper_change_deps.
const (
	HyperChangeDeps       sqlitegen.Table  = "hyper_change_deps"
	HyperChangeDepsChild  sqlitegen.Column = "hyper_change_deps.child"
	HyperChangeDepsParent sqlitegen.Column = "hyper_change_deps.parent"
)

// Table hyper_change_deps. Plain strings.
const (
	T_HyperChangeDeps       = "hyper_change_deps"
	C_HyperChangeDepsChild  = "hyper_change_deps.child"
	C_HyperChangeDepsParent = "hyper_change_deps.parent"
)

// Table hyper_changes.
const (
	HyperChanges        sqlitegen.Table  = "hyper_changes"
	HyperChangesBlob    sqlitegen.Column = "hyper_changes.blob"
	HyperChangesEntity  sqlitegen.Column = "hyper_changes.entity"
	HyperChangesHlcTime sqlitegen.Column = "hyper_changes.hlc_time"
)

// Table hyper_changes. Plain strings.
const (
	T_HyperChanges        = "hyper_changes"
	C_HyperChangesBlob    = "hyper_changes.blob"
	C_HyperChangesEntity  = "hyper_changes.entity"
	C_HyperChangesHlcTime = "hyper_changes.hlc_time"
)

// Table hyper_changes_view.
const (
	HyperChangesView          sqlitegen.Table  = "hyper_changes_view"
	HyperChangesViewBlobID    sqlitegen.Column = "hyper_changes_view.blob_id"
	HyperChangesViewCodec     sqlitegen.Column = "hyper_changes_view.codec"
	HyperChangesViewData      sqlitegen.Column = "hyper_changes_view.data"
	HyperChangesViewEntity    sqlitegen.Column = "hyper_changes_view.entity"
	HyperChangesViewEntityID  sqlitegen.Column = "hyper_changes_view.entity_id"
	HyperChangesViewHlcTime   sqlitegen.Column = "hyper_changes_view.hlc_time"
	HyperChangesViewMultihash sqlitegen.Column = "hyper_changes_view.multihash"
	HyperChangesViewSize      sqlitegen.Column = "hyper_changes_view.size"
)

// Table hyper_changes_view. Plain strings.
const (
	T_HyperChangesView          = "hyper_changes_view"
	C_HyperChangesViewBlobID    = "hyper_changes_view.blob_id"
	C_HyperChangesViewCodec     = "hyper_changes_view.codec"
	C_HyperChangesViewData      = "hyper_changes_view.data"
	C_HyperChangesViewEntity    = "hyper_changes_view.entity"
	C_HyperChangesViewEntityID  = "hyper_changes_view.entity_id"
	C_HyperChangesViewHlcTime   = "hyper_changes_view.hlc_time"
	C_HyperChangesViewMultihash = "hyper_changes_view.multihash"
	C_HyperChangesViewSize      = "hyper_changes_view.size"
)

// Table hyper_drafts.
const (
	HyperDrafts       sqlitegen.Table  = "hyper_drafts"
	HyperDraftsBlob   sqlitegen.Column = "hyper_drafts.blob"
	HyperDraftsEntity sqlitegen.Column = "hyper_drafts.entity"
)

// Table hyper_drafts. Plain strings.
const (
	T_HyperDrafts       = "hyper_drafts"
	C_HyperDraftsBlob   = "hyper_drafts.blob"
	C_HyperDraftsEntity = "hyper_drafts.entity"
)

// Table hyper_drafts_view.
const (
	HyperDraftsView          sqlitegen.Table  = "hyper_drafts_view"
	HyperDraftsViewBlobID    sqlitegen.Column = "hyper_drafts_view.blob_id"
	HyperDraftsViewCodec     sqlitegen.Column = "hyper_drafts_view.codec"
	HyperDraftsViewEntity    sqlitegen.Column = "hyper_drafts_view.entity"
	HyperDraftsViewEntityID  sqlitegen.Column = "hyper_drafts_view.entity_id"
	HyperDraftsViewMultihash sqlitegen.Column = "hyper_drafts_view.multihash"
)

// Table hyper_drafts_view. Plain strings.
const (
	T_HyperDraftsView          = "hyper_drafts_view"
	C_HyperDraftsViewBlobID    = "hyper_drafts_view.blob_id"
	C_HyperDraftsViewCodec     = "hyper_drafts_view.codec"
	C_HyperDraftsViewEntity    = "hyper_drafts_view.entity"
	C_HyperDraftsViewEntityID  = "hyper_drafts_view.entity_id"
	C_HyperDraftsViewMultihash = "hyper_drafts_view.multihash"
)

// Table hyper_entities.
const (
	HyperEntities    sqlitegen.Table  = "hyper_entities"
	HyperEntitiesEID sqlitegen.Column = "hyper_entities.eid"
	HyperEntitiesID  sqlitegen.Column = "hyper_entities.id"
)

// Table hyper_entities. Plain strings.
const (
	T_HyperEntities    = "hyper_entities"
	C_HyperEntitiesEID = "hyper_entities.eid"
	C_HyperEntitiesID  = "hyper_entities.id"
)

// Table hyper_links.
const (
	HyperLinks             sqlitegen.Table  = "hyper_links"
	HyperLinksData         sqlitegen.Column = "hyper_links.data"
	HyperLinksRel          sqlitegen.Column = "hyper_links.rel"
	HyperLinksSourceBlob   sqlitegen.Column = "hyper_links.source_blob"
	HyperLinksTargetBlob   sqlitegen.Column = "hyper_links.target_blob"
	HyperLinksTargetEntity sqlitegen.Column = "hyper_links.target_entity"
)

// Table hyper_links. Plain strings.
const (
	T_HyperLinks             = "hyper_links"
	C_HyperLinksData         = "hyper_links.data"
	C_HyperLinksRel          = "hyper_links.rel"
	C_HyperLinksSourceBlob   = "hyper_links.source_blob"
	C_HyperLinksTargetBlob   = "hyper_links.target_blob"
	C_HyperLinksTargetEntity = "hyper_links.target_entity"
)

// Table invite_tokens.
const (
	InviteTokens           sqlitegen.Table  = "invite_tokens"
	InviteTokensExpireTime sqlitegen.Column = "invite_tokens.expire_time"
	InviteTokensRole       sqlitegen.Column = "invite_tokens.role"
	InviteTokensToken      sqlitegen.Column = "invite_tokens.token"
)

// Table invite_tokens. Plain strings.
const (
	T_InviteTokens           = "invite_tokens"
	C_InviteTokensExpireTime = "invite_tokens.expire_time"
	C_InviteTokensRole       = "invite_tokens.role"
	C_InviteTokensToken      = "invite_tokens.token"
)

// Table key_delegations.
const (
	KeyDelegations          sqlitegen.Table  = "key_delegations"
	KeyDelegationsBlob      sqlitegen.Column = "key_delegations.blob"
	KeyDelegationsDelegate  sqlitegen.Column = "key_delegations.delegate"
	KeyDelegationsIssueTime sqlitegen.Column = "key_delegations.issue_time"
	KeyDelegationsIssuer    sqlitegen.Column = "key_delegations.issuer"
)

// Table key_delegations. Plain strings.
const (
	T_KeyDelegations          = "key_delegations"
	C_KeyDelegationsBlob      = "key_delegations.blob"
	C_KeyDelegationsDelegate  = "key_delegations.delegate"
	C_KeyDelegationsIssueTime = "key_delegations.issue_time"
	C_KeyDelegationsIssuer    = "key_delegations.issuer"
)

// Table key_delegations_view.
const (
	KeyDelegationsView              sqlitegen.Table  = "key_delegations_view"
	KeyDelegationsViewBlob          sqlitegen.Column = "key_delegations_view.blob"
	KeyDelegationsViewBlobCodec     sqlitegen.Column = "key_delegations_view.blob_codec"
	KeyDelegationsViewBlobMultihash sqlitegen.Column = "key_delegations_view.blob_multihash"
	KeyDelegationsViewDelegate      sqlitegen.Column = "key_delegations_view.delegate"
	KeyDelegationsViewIssueTime     sqlitegen.Column = "key_delegations_view.issue_time"
	KeyDelegationsViewIssuer        sqlitegen.Column = "key_delegations_view.issuer"
)

// Table key_delegations_view. Plain strings.
const (
	T_KeyDelegationsView              = "key_delegations_view"
	C_KeyDelegationsViewBlob          = "key_delegations_view.blob"
	C_KeyDelegationsViewBlobCodec     = "key_delegations_view.blob_codec"
	C_KeyDelegationsViewBlobMultihash = "key_delegations_view.blob_multihash"
	C_KeyDelegationsViewDelegate      = "key_delegations_view.delegate"
	C_KeyDelegationsViewIssueTime     = "key_delegations_view.issue_time"
	C_KeyDelegationsViewIssuer        = "key_delegations_view.issuer"
)

// Table public_blobs_view.
const (
	PublicBlobsView          sqlitegen.Table  = "public_blobs_view"
	PublicBlobsViewCodec     sqlitegen.Column = "public_blobs_view.codec"
	PublicBlobsViewID        sqlitegen.Column = "public_blobs_view.id"
	PublicBlobsViewMultihash sqlitegen.Column = "public_blobs_view.multihash"
)

// Table public_blobs_view. Plain strings.
const (
	T_PublicBlobsView          = "public_blobs_view"
	C_PublicBlobsViewCodec     = "public_blobs_view.codec"
	C_PublicBlobsViewID        = "public_blobs_view.id"
	C_PublicBlobsViewMultihash = "public_blobs_view.multihash"
)

// Table public_keys.
const (
	PublicKeys          sqlitegen.Table  = "public_keys"
	PublicKeysID        sqlitegen.Column = "public_keys.id"
	PublicKeysPrincipal sqlitegen.Column = "public_keys.principal"
)

// Table public_keys. Plain strings.
const (
	T_PublicKeys          = "public_keys"
	C_PublicKeysID        = "public_keys.id"
	C_PublicKeysPrincipal = "public_keys.principal"
)

// Table site_members.
const (
	SiteMembers          sqlitegen.Table  = "site_members"
	SiteMembersAccountID sqlitegen.Column = "site_members.account_id"
	SiteMembersRole      sqlitegen.Column = "site_members.role"
)

// Table site_members. Plain strings.
const (
	T_SiteMembers          = "site_members"
	C_SiteMembersAccountID = "site_members.account_id"
	C_SiteMembersRole      = "site_members.role"
)

// Table sites.
const (
	Sites          sqlitegen.Table  = "sites"
	SitesAccountID sqlitegen.Column = "sites.account_id"
	SitesAddresses sqlitegen.Column = "sites.addresses"
	SitesHostname  sqlitegen.Column = "sites.hostname"
	SitesRole      sqlitegen.Column = "sites.role"
)

// Table sites. Plain strings.
const (
	T_Sites          = "sites"
	C_SitesAccountID = "sites.account_id"
	C_SitesAddresses = "sites.addresses"
	C_SitesHostname  = "sites.hostname"
	C_SitesRole      = "sites.role"
)

// Table sqlite_sequence.
const (
	SQLITESequence     sqlitegen.Table  = "sqlite_sequence"
	SQLITESequenceName sqlitegen.Column = "sqlite_sequence.name"
	SQLITESequenceSeq  sqlitegen.Column = "sqlite_sequence.seq"
)

// Table sqlite_sequence. Plain strings.
const (
	T_SQLITESequence     = "sqlite_sequence"
	C_SQLITESequenceName = "sqlite_sequence.name"
	C_SQLITESequenceSeq  = "sqlite_sequence.seq"
)

// Table wallets.
const (
	Wallets         sqlitegen.Table  = "wallets"
	WalletsAddress  sqlitegen.Column = "wallets.address"
	WalletsBalance  sqlitegen.Column = "wallets.balance"
	WalletsID       sqlitegen.Column = "wallets.id"
	WalletsLogin    sqlitegen.Column = "wallets.login"
	WalletsName     sqlitegen.Column = "wallets.name"
	WalletsPassword sqlitegen.Column = "wallets.password"
	WalletsToken    sqlitegen.Column = "wallets.token"
	WalletsType     sqlitegen.Column = "wallets.type"
)

// Table wallets. Plain strings.
const (
	T_Wallets         = "wallets"
	C_WalletsAddress  = "wallets.address"
	C_WalletsBalance  = "wallets.balance"
	C_WalletsID       = "wallets.id"
	C_WalletsLogin    = "wallets.login"
	C_WalletsName     = "wallets.name"
	C_WalletsPassword = "wallets.password"
	C_WalletsToken    = "wallets.token"
	C_WalletsType     = "wallets.type"
)

// Table web_publication_records.
const (
	WebPublicationRecords                sqlitegen.Table  = "web_publication_records"
	WebPublicationRecordsDocumentVersion sqlitegen.Column = "web_publication_records.document_version"
	WebPublicationRecordsEntity          sqlitegen.Column = "web_publication_records.entity"
	WebPublicationRecordsPath            sqlitegen.Column = "web_publication_records.path"
)

// Table web_publication_records. Plain strings.
const (
	T_WebPublicationRecords                = "web_publication_records"
	C_WebPublicationRecordsDocumentVersion = "web_publication_records.document_version"
	C_WebPublicationRecordsEntity          = "web_publication_records.entity"
	C_WebPublicationRecordsPath            = "web_publication_records.path"
)

// Schema describes SQLite columns.
var Schema = sqlitegen.Schema{
	Columns: map[sqlitegen.Column]sqlitegen.ColumnInfo{
		BlobsCodec:                           {Table: Blobs, SQLType: "INTEGER"},
		BlobsData:                            {Table: Blobs, SQLType: "BLOB"},
		BlobsID:                              {Table: Blobs, SQLType: "INTEGER"},
		BlobsInsertTime:                      {Table: Blobs, SQLType: "INTEGER"},
		BlobsMultihash:                       {Table: Blobs, SQLType: "BLOB"},
		BlobsSize:                            {Table: Blobs, SQLType: "INTEGER"},
		ContentLinksViewData:                 {Table: ContentLinksView, SQLType: "BLOB"},
		ContentLinksViewRel:                  {Table: ContentLinksView, SQLType: "TEXT"},
		ContentLinksViewSourceBlob:           {Table: ContentLinksView, SQLType: "INTEGER"},
		ContentLinksViewSourceBlobCodec:      {Table: ContentLinksView, SQLType: "INTEGER"},
		ContentLinksViewSourceBlobMultihash:  {Table: ContentLinksView, SQLType: "BLOB"},
		ContentLinksViewSourceEID:            {Table: ContentLinksView, SQLType: "TEXT"},
		ContentLinksViewSourceEntity:         {Table: ContentLinksView, SQLType: "INTEGER"},
		ContentLinksViewTargetEID:            {Table: ContentLinksView, SQLType: "TEXT"},
		ContentLinksViewTargetEntity:         {Table: ContentLinksView, SQLType: "INTEGER"},
		GlobalMetaKey:                        {Table: GlobalMeta, SQLType: "TEXT"},
		GlobalMetaValue:                      {Table: GlobalMeta, SQLType: "TEXT"},
		HyperChangeDepsChild:                 {Table: HyperChangeDeps, SQLType: "INTEGER"},
		HyperChangeDepsParent:                {Table: HyperChangeDeps, SQLType: "INTEGER"},
		HyperChangesBlob:                     {Table: HyperChanges, SQLType: "INTEGER"},
		HyperChangesEntity:                   {Table: HyperChanges, SQLType: "INTEGER"},
		HyperChangesHlcTime:                  {Table: HyperChanges, SQLType: "INTEGER"},
		HyperChangesViewBlobID:               {Table: HyperChangesView, SQLType: "INTEGER"},
		HyperChangesViewCodec:                {Table: HyperChangesView, SQLType: "INTEGER"},
		HyperChangesViewData:                 {Table: HyperChangesView, SQLType: "BLOB"},
		HyperChangesViewEntity:               {Table: HyperChangesView, SQLType: "TEXT"},
		HyperChangesViewEntityID:             {Table: HyperChangesView, SQLType: "INTEGER"},
		HyperChangesViewHlcTime:              {Table: HyperChangesView, SQLType: "INTEGER"},
		HyperChangesViewMultihash:            {Table: HyperChangesView, SQLType: "BLOB"},
		HyperChangesViewSize:                 {Table: HyperChangesView, SQLType: "INTEGER"},
		HyperDraftsBlob:                      {Table: HyperDrafts, SQLType: "INTEGER"},
		HyperDraftsEntity:                    {Table: HyperDrafts, SQLType: "INTEGER"},
		HyperDraftsViewBlobID:                {Table: HyperDraftsView, SQLType: "INTEGER"},
		HyperDraftsViewCodec:                 {Table: HyperDraftsView, SQLType: "INTEGER"},
		HyperDraftsViewEntity:                {Table: HyperDraftsView, SQLType: "TEXT"},
		HyperDraftsViewEntityID:              {Table: HyperDraftsView, SQLType: "INTEGER"},
		HyperDraftsViewMultihash:             {Table: HyperDraftsView, SQLType: "BLOB"},
		HyperEntitiesEID:                     {Table: HyperEntities, SQLType: "TEXT"},
		HyperEntitiesID:                      {Table: HyperEntities, SQLType: "INTEGER"},
		HyperLinksData:                       {Table: HyperLinks, SQLType: "BLOB"},
		HyperLinksRel:                        {Table: HyperLinks, SQLType: "TEXT"},
		HyperLinksSourceBlob:                 {Table: HyperLinks, SQLType: "INTEGER"},
		HyperLinksTargetBlob:                 {Table: HyperLinks, SQLType: "INTEGER"},
		HyperLinksTargetEntity:               {Table: HyperLinks, SQLType: "INTEGER"},
		InviteTokensExpireTime:               {Table: InviteTokens, SQLType: "INTEGER"},
		InviteTokensRole:                     {Table: InviteTokens, SQLType: "INTEGER"},
		InviteTokensToken:                    {Table: InviteTokens, SQLType: "TEXT"},
		KeyDelegationsBlob:                   {Table: KeyDelegations, SQLType: "INTEGER"},
		KeyDelegationsDelegate:               {Table: KeyDelegations, SQLType: "INTEGER"},
		KeyDelegationsIssueTime:              {Table: KeyDelegations, SQLType: "INTEGER"},
		KeyDelegationsIssuer:                 {Table: KeyDelegations, SQLType: "INTEGER"},
		KeyDelegationsViewBlob:               {Table: KeyDelegationsView, SQLType: "INTEGER"},
		KeyDelegationsViewBlobCodec:          {Table: KeyDelegationsView, SQLType: "INTEGER"},
		KeyDelegationsViewBlobMultihash:      {Table: KeyDelegationsView, SQLType: "BLOB"},
		KeyDelegationsViewDelegate:           {Table: KeyDelegationsView, SQLType: "BLOB"},
		KeyDelegationsViewIssueTime:          {Table: KeyDelegationsView, SQLType: "INTEGER"},
		KeyDelegationsViewIssuer:             {Table: KeyDelegationsView, SQLType: "BLOB"},
		PublicBlobsViewCodec:                 {Table: PublicBlobsView, SQLType: "INTEGER"},
		PublicBlobsViewID:                    {Table: PublicBlobsView, SQLType: "INTEGER"},
		PublicBlobsViewMultihash:             {Table: PublicBlobsView, SQLType: "BLOB"},
		PublicKeysID:                         {Table: PublicKeys, SQLType: "INTEGER"},
		PublicKeysPrincipal:                  {Table: PublicKeys, SQLType: "BLOB"},
		SiteMembersAccountID:                 {Table: SiteMembers, SQLType: "INTEGER"},
		SiteMembersRole:                      {Table: SiteMembers, SQLType: "INTEGER"},
		SitesAccountID:                       {Table: Sites, SQLType: "INTEGER"},
		SitesAddresses:                       {Table: Sites, SQLType: "TEXT"},
		SitesHostname:                        {Table: Sites, SQLType: "TEXT"},
		SitesRole:                            {Table: Sites, SQLType: "INTEGER"},
		SQLITESequenceName:                   {Table: SQLITESequence, SQLType: ""},
		SQLITESequenceSeq:                    {Table: SQLITESequence, SQLType: ""},
		WalletsAddress:                       {Table: Wallets, SQLType: "TEXT"},
		WalletsBalance:                       {Table: Wallets, SQLType: "INTEGER"},
		WalletsID:                            {Table: Wallets, SQLType: "TEXT"},
		WalletsLogin:                         {Table: Wallets, SQLType: "BLOB"},
		WalletsName:                          {Table: Wallets, SQLType: "TEXT"},
		WalletsPassword:                      {Table: Wallets, SQLType: "BLOB"},
		WalletsToken:                         {Table: Wallets, SQLType: "BLOB"},
		WalletsType:                          {Table: Wallets, SQLType: "TEXT"},
		WebPublicationRecordsDocumentVersion: {Table: WebPublicationRecords, SQLType: "TEXT"},
		WebPublicationRecordsEntity:          {Table: WebPublicationRecords, SQLType: "INTEGER"},
		WebPublicationRecordsPath:            {Table: WebPublicationRecords, SQLType: "TEXT"},
	},
}
