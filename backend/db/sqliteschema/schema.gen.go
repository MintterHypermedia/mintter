// Code generated by sqlitegen. DO NOT EDIT.

package sqliteschema

import (
	"mintter/backend/db/sqlitegen"
)

// Table accounts.
const (
	Accounts      sqlitegen.Table  = "accounts"
	AccountsAlias sqlitegen.Column = "accounts.alias"
	AccountsBio   sqlitegen.Column = "accounts.bio"
	AccountsCID   sqlitegen.Column = "accounts.cid"
	AccountsEmail sqlitegen.Column = "accounts.email"
	AccountsID    sqlitegen.Column = "accounts.id"
)

// Table backlinks.
const (
	Backlinks      sqlitegen.Table  = "backlinks"
	BacklinksDepth sqlitegen.Column = "backlinks.depth"
	BacklinksID    sqlitegen.Column = "backlinks.id"
)

// Table changes.
const (
	Changes            sqlitegen.Table  = "changes"
	ChangesDeviceID    sqlitegen.Column = "changes.device_id"
	ChangesIPFSBlobID  sqlitegen.Column = "changes.ipfs_blob_id"
	ChangesLamportTime sqlitegen.Column = "changes.lamport_time"
	ChangesObjectID    sqlitegen.Column = "changes.object_id"
	ChangesSeq         sqlitegen.Column = "changes.seq"
)

// Table devices.
const (
	Devices           sqlitegen.Table  = "devices"
	DevicesAccountID  sqlitegen.Column = "devices.account_id"
	DevicesCID        sqlitegen.Column = "devices.cid"
	DevicesCreateTime sqlitegen.Column = "devices.create_time"
	DevicesID         sqlitegen.Column = "devices.id"
	DevicesPublicKey  sqlitegen.Column = "devices.public_key"
)

// Table documents.
const (
	Documents              sqlitegen.Table  = "documents"
	DocumentsCreateTime    sqlitegen.Column = "documents.create_time"
	DocumentsDraftContent  sqlitegen.Column = "documents.draft_content"
	DocumentsDraftSubtitle sqlitegen.Column = "documents.draft_subtitle"
	DocumentsDraftTitle    sqlitegen.Column = "documents.draft_title"
	DocumentsID            sqlitegen.Column = "documents.id"
	DocumentsLatestVersion sqlitegen.Column = "documents.latest_version"
	DocumentsPublishTime   sqlitegen.Column = "documents.publish_time"
	DocumentsSubtitle      sqlitegen.Column = "documents.subtitle"
	DocumentsTitle         sqlitegen.Column = "documents.title"
	DocumentsUpdateTime    sqlitegen.Column = "documents.update_time"
)

// Table ipfs_blocks.
const (
	IPFSBlocks           sqlitegen.Table  = "ipfs_blocks"
	IPFSBlocksCodec      sqlitegen.Column = "ipfs_blocks.codec"
	IPFSBlocksCreateTime sqlitegen.Column = "ipfs_blocks.create_time"
	IPFSBlocksData       sqlitegen.Column = "ipfs_blocks.data"
	IPFSBlocksID         sqlitegen.Column = "ipfs_blocks.id"
	IPFSBlocksMultihash  sqlitegen.Column = "ipfs_blocks.multihash"
)

// Table links.
const (
	Links                      sqlitegen.Table  = "links"
	LinksSourceBlockID         sqlitegen.Column = "links.source_block_id"
	LinksSourceChangeID        sqlitegen.Column = "links.source_change_id"
	LinksSourceDocumentID      sqlitegen.Column = "links.source_document_id"
	LinksTargetBlockID         sqlitegen.Column = "links.target_block_id"
	LinksTargetDocumentID      sqlitegen.Column = "links.target_document_id"
	LinksTargetDocumentVersion sqlitegen.Column = "links.target_document_version"
)

// Table objects.
const (
	Objects          sqlitegen.Table  = "objects"
	ObjectsAccountID sqlitegen.Column = "objects.account_id"
	ObjectsCID       sqlitegen.Column = "objects.cid"
	ObjectsID        sqlitegen.Column = "objects.id"
)

// Schema describes SQLite columns.
var Schema = sqlitegen.Schema{
	Columns: map[sqlitegen.Column]sqlitegen.ColumnInfo{
		AccountsAlias:              {Table: Accounts, SQLType: "TEXT"},
		AccountsBio:                {Table: Accounts, SQLType: "TEXT"},
		AccountsCID:                {Table: Accounts, SQLType: "BLOB"},
		AccountsEmail:              {Table: Accounts, SQLType: "TEXT"},
		AccountsID:                 {Table: Accounts, SQLType: "INTEGER"},
		BacklinksDepth:             {Table: Backlinks, SQLType: "INTEGER"},
		BacklinksID:                {Table: Backlinks, SQLType: "INTEGER"},
		ChangesDeviceID:            {Table: Changes, SQLType: "INTEGER"},
		ChangesIPFSBlobID:          {Table: Changes, SQLType: "INTEGER"},
		ChangesLamportTime:         {Table: Changes, SQLType: "INTEGER"},
		ChangesObjectID:            {Table: Changes, SQLType: "INTEGER"},
		ChangesSeq:                 {Table: Changes, SQLType: "INTEGER"},
		DevicesAccountID:           {Table: Devices, SQLType: "INTEGER"},
		DevicesCID:                 {Table: Devices, SQLType: "BLOB"},
		DevicesCreateTime:          {Table: Devices, SQLType: "TIMESTAMP"},
		DevicesID:                  {Table: Devices, SQLType: "INTEGER"},
		DevicesPublicKey:           {Table: Devices, SQLType: "BLOB"},
		DocumentsCreateTime:        {Table: Documents, SQLType: "TIMESTAMP"},
		DocumentsDraftContent:      {Table: Documents, SQLType: "BLOB"},
		DocumentsDraftSubtitle:     {Table: Documents, SQLType: "TEXT"},
		DocumentsDraftTitle:        {Table: Documents, SQLType: "TEXT"},
		DocumentsID:                {Table: Documents, SQLType: "INTEGER"},
		DocumentsLatestVersion:     {Table: Documents, SQLType: "TEXT"},
		DocumentsPublishTime:       {Table: Documents, SQLType: "TIMESTAMP"},
		DocumentsSubtitle:          {Table: Documents, SQLType: "TEXT"},
		DocumentsTitle:             {Table: Documents, SQLType: "TEXT"},
		DocumentsUpdateTime:        {Table: Documents, SQLType: "TIMESTAMP"},
		IPFSBlocksCodec:            {Table: IPFSBlocks, SQLType: "INTEGER"},
		IPFSBlocksCreateTime:       {Table: IPFSBlocks, SQLType: "TIMESTAMP"},
		IPFSBlocksData:             {Table: IPFSBlocks, SQLType: "BLOB"},
		IPFSBlocksID:               {Table: IPFSBlocks, SQLType: "INTEGER"},
		IPFSBlocksMultihash:        {Table: IPFSBlocks, SQLType: "BLOB"},
		LinksSourceBlockID:         {Table: Links, SQLType: "TEXT"},
		LinksSourceChangeID:        {Table: Links, SQLType: "INTEGER"},
		LinksSourceDocumentID:      {Table: Links, SQLType: "INTEGER"},
		LinksTargetBlockID:         {Table: Links, SQLType: "TEXT"},
		LinksTargetDocumentID:      {Table: Links, SQLType: "INTEGER"},
		LinksTargetDocumentVersion: {Table: Links, SQLType: "TEXT"},
		ObjectsAccountID:           {Table: Objects, SQLType: "INTEGER"},
		ObjectsCID:                 {Table: Objects, SQLType: "BLOB"},
		ObjectsID:                  {Table: Objects, SQLType: "INTEGER"},
	},
}
