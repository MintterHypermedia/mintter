// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: contentgraph/v1alpha/graph.proto

package contentgraph

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to list mentions.
type ListMentionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. ID of the document to list mentions for.
	DocumentId string `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Optional. Depth can be used to request transitive mentions for a document.
	// For example depth=1 will return not only mentions of the requested document_id
	// but also mentions of those direct mentions. The default is depth=0 and will only
	// return direct mentions.
	Depth int32 `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *ListMentionsRequest) Reset() {
	*x = ListMentionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMentionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMentionsRequest) ProtoMessage() {}

func (x *ListMentionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMentionsRequest.ProtoReflect.Descriptor instead.
func (*ListMentionsRequest) Descriptor() ([]byte, []int) {
	return file_contentgraph_v1alpha_graph_proto_rawDescGZIP(), []int{0}
}

func (x *ListMentionsRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ListMentionsRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// Response with the list of mentions.
type ListMentionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of mentions of the requested document.
	Mentions []*Mention `protobuf:"bytes,2,rep,name=mentions,proto3" json:"mentions,omitempty"`
}

func (x *ListMentionsResponse) Reset() {
	*x = ListMentionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMentionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMentionsResponse) ProtoMessage() {}

func (x *ListMentionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMentionsResponse.ProtoReflect.Descriptor instead.
func (*ListMentionsResponse) Descriptor() ([]byte, []int) {
	return file_contentgraph_v1alpha_graph_proto_rawDescGZIP(), []int{1}
}

func (x *ListMentionsResponse) GetMentions() []*Mention {
	if x != nil {
		return x.Mentions
	}
	return nil
}

// Mention is a description of a link with the two sides specified.
//
// Apparently there's no single well-established unambiguous
// way to name the two different sides of a link. In this case
// we use the terminology described in this page: https://www.semrush.com/kb/501-backlinks-report-manual#readingyourreport,
// i.e. source is where the link was found, target is where the link points to.
type Mention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The document ID that the foreign link points to.
	TargetDocumentId string `protobuf:"bytes,1,opt,name=target_document_id,json=targetDocumentId,proto3" json:"target_document_id,omitempty"`
	// Optional. The block ID that the foreign link points to. Can be empty
	// if the original link was to the whole document.
	TargetBlockId string `protobuf:"bytes,2,opt,name=target_block_id,json=targetBlockId,proto3" json:"target_block_id,omitempty"`
	// Required. The ID of the document where the link was found.
	SourceDocumentId string `protobuf:"bytes,3,opt,name=source_document_id,json=sourceDocumentId,proto3" json:"source_document_id,omitempty"`
	// Required. The ID of the block where the link was found.
	SourceBlockId string `protobuf:"bytes,4,opt,name=source_block_id,json=sourceBlockId,proto3" json:"source_block_id,omitempty"`
}

func (x *Mention) Reset() {
	*x = Mention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mention) ProtoMessage() {}

func (x *Mention) ProtoReflect() protoreflect.Message {
	mi := &file_contentgraph_v1alpha_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mention.ProtoReflect.Descriptor instead.
func (*Mention) Descriptor() ([]byte, []int) {
	return file_contentgraph_v1alpha_graph_proto_rawDescGZIP(), []int{2}
}

func (x *Mention) GetTargetDocumentId() string {
	if x != nil {
		return x.TargetDocumentId
	}
	return ""
}

func (x *Mention) GetTargetBlockId() string {
	if x != nil {
		return x.TargetBlockId
	}
	return ""
}

func (x *Mention) GetSourceDocumentId() string {
	if x != nil {
		return x.SourceDocumentId
	}
	return ""
}

func (x *Mention) GetSourceBlockId() string {
	if x != nil {
		return x.SourceBlockId
	}
	return ""
}

var File_contentgraph_v1alpha_graph_proto protoreflect.FileDescriptor

var file_contentgraph_v1alpha_graph_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x74, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x22, 0x4c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x22, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xb5, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x32, 0x8d, 0x01, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x7d, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x69, 0x6e, 0x74, 0x74, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x6d, 0x69, 0x6e,
	0x74, 0x74, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contentgraph_v1alpha_graph_proto_rawDescOnce sync.Once
	file_contentgraph_v1alpha_graph_proto_rawDescData = file_contentgraph_v1alpha_graph_proto_rawDesc
)

func file_contentgraph_v1alpha_graph_proto_rawDescGZIP() []byte {
	file_contentgraph_v1alpha_graph_proto_rawDescOnce.Do(func() {
		file_contentgraph_v1alpha_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_contentgraph_v1alpha_graph_proto_rawDescData)
	})
	return file_contentgraph_v1alpha_graph_proto_rawDescData
}

var file_contentgraph_v1alpha_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contentgraph_v1alpha_graph_proto_goTypes = []interface{}{
	(*ListMentionsRequest)(nil),  // 0: com.mintter.contentgraph.v1alpha.ListMentionsRequest
	(*ListMentionsResponse)(nil), // 1: com.mintter.contentgraph.v1alpha.ListMentionsResponse
	(*Mention)(nil),              // 2: com.mintter.contentgraph.v1alpha.Mention
}
var file_contentgraph_v1alpha_graph_proto_depIdxs = []int32{
	2, // 0: com.mintter.contentgraph.v1alpha.ListMentionsResponse.mentions:type_name -> com.mintter.contentgraph.v1alpha.Mention
	0, // 1: com.mintter.contentgraph.v1alpha.ContentGraph.ListMentions:input_type -> com.mintter.contentgraph.v1alpha.ListMentionsRequest
	1, // 2: com.mintter.contentgraph.v1alpha.ContentGraph.ListMentions:output_type -> com.mintter.contentgraph.v1alpha.ListMentionsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_contentgraph_v1alpha_graph_proto_init() }
func file_contentgraph_v1alpha_graph_proto_init() {
	if File_contentgraph_v1alpha_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contentgraph_v1alpha_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMentionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contentgraph_v1alpha_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMentionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contentgraph_v1alpha_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contentgraph_v1alpha_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contentgraph_v1alpha_graph_proto_goTypes,
		DependencyIndexes: file_contentgraph_v1alpha_graph_proto_depIdxs,
		MessageInfos:      file_contentgraph_v1alpha_graph_proto_msgTypes,
	}.Build()
	File_contentgraph_v1alpha_graph_proto = out.File
	file_contentgraph_v1alpha_graph_proto_rawDesc = nil
	file_contentgraph_v1alpha_graph_proto_goTypes = nil
	file_contentgraph_v1alpha_graph_proto_depIdxs = nil
}
