subinclude("//build/rules/go:defs", "//build/rules/codegen:defs")

# Builds the mintterd binary. It depends on all the non-test
# Go files inside the `backend` directory.
go_binary(
    name = "mintterd",
    srcs = glob(
        ["**/*.go"],
        exclude = ["**/*_test.go"],
    ) + [
        "//backend/daemon/storage:go_library",
        "//backend/hyper/hypersql:go_library",
        "//backend/lndhub/lndhubsql:go_library",
        "//backend/wallet/walletsql:go_library",
    ],
    out = "mintterd-" + target_platform_triple(),
    cgo = True,
    gomod = "//:gomod",
    package = "./cmd/mintterd",
    visibility = ["PUBLIC"],
    deps = [
        "//third_party:sqlite",
    ],
)

go_binary(
    name = "pingp2p",
    srcs = glob(["./cmd/pingp2p/*.go"]),
    out = "pingp2p-" + target_platform_triple(),
    cgo = True,
    gomod = "//:gomod",
    package = "./cmd/pingp2p",
    visibility = ["PUBLIC"],
)

go_binary(
    name = "minttergw",
    srcs = glob(
        ["**/*.go"],
        exclude = ["**/*_test.go"],
    ) + [
        "//backend/daemon/storage:go_library",
        "//backend/hyper/hypersql:go_library",
        "//backend/lndhub/lndhubsql:go_library",
        "//backend/wallet/walletsql:go_library",
    ],
    out = "minttergw-" + target_platform_triple(),
    cgo = True,
    gomod = "//:gomod",
    package = "./cmd/minttergw",
    visibility = ["PUBLIC"],
    deps = [
        "//third_party:sqlite",
    ],
)
