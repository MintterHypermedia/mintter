// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pb_columnar.proto

package mtast

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ColumnValueType int32

const (
	ColumnValueType_COLUMN_VALUE_TYPE_UNSPECIFIED ColumnValueType = 0
	ColumnValueType_STRING                        ColumnValueType = 1
	ColumnValueType_JSON                          ColumnValueType = 2
)

// Enum value maps for ColumnValueType.
var (
	ColumnValueType_name = map[int32]string{
		0: "COLUMN_VALUE_TYPE_UNSPECIFIED",
		1: "STRING",
		2: "JSON",
	}
	ColumnValueType_value = map[string]int32{
		"COLUMN_VALUE_TYPE_UNSPECIFIED": 0,
		"STRING":                        1,
		"JSON":                          2,
	}
)

func (x ColumnValueType) Enum() *ColumnValueType {
	p := new(ColumnValueType)
	*p = x
	return p
}

func (x ColumnValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_columnar_proto_enumTypes[0].Descriptor()
}

func (ColumnValueType) Type() protoreflect.EnumType {
	return &file_pb_columnar_proto_enumTypes[0]
}

func (x ColumnValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnValueType.Descriptor instead.
func (ColumnValueType) EnumDescriptor() ([]byte, []int) {
	return file_pb_columnar_proto_rawDescGZIP(), []int{0}
}

type ColumnarLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites []string `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
	Nodes []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Keys  []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ColumnarLookup) Reset() {
	*x = ColumnarLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_columnar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnarLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnarLookup) ProtoMessage() {}

func (x *ColumnarLookup) ProtoReflect() protoreflect.Message {
	mi := &file_pb_columnar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnarLookup.ProtoReflect.Descriptor instead.
func (*ColumnarLookup) Descriptor() ([]byte, []int) {
	return file_pb_columnar_proto_rawDescGZIP(), []int{0}
}

func (x *ColumnarLookup) GetSites() []string {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *ColumnarLookup) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ColumnarLookup) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RLE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RLE) Reset() {
	*x = RLE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_columnar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RLE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLE) ProtoMessage() {}

func (x *RLE) ProtoReflect() protoreflect.Message {
	mi := &file_pb_columnar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLE.ProtoReflect.Descriptor instead.
func (*RLE) Descriptor() ([]byte, []int) {
	return file_pb_columnar_proto_rawDescGZIP(), []int{1}
}

type ColumnarChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lookup     *ColumnarLookup   `protobuf:"bytes,1,opt,name=lookup,proto3" json:"lookup,omitempty"`
	Site       []int64           `protobuf:"varint,2,rep,packed,name=site,proto3" json:"site,omitempty"`
	Clock      []int64           `protobuf:"varint,3,rep,packed,name=clock,proto3" json:"clock,omitempty"`
	Node       []int64           `protobuf:"varint,4,rep,packed,name=node,proto3" json:"node,omitempty"`
	Parent     []int64           `protobuf:"varint,5,rep,packed,name=parent,proto3" json:"parent,omitempty"`
	LeftSite   []int64           `protobuf:"varint,6,rep,packed,name=leftSite,proto3" json:"leftSite,omitempty"`
	LeftClock  []int64           `protobuf:"varint,7,rep,packed,name=leftClock,proto3" json:"leftClock,omitempty"`
	Key        []int64           `protobuf:"varint,8,rep,packed,name=key,proto3" json:"key,omitempty"`
	Value_Type []ColumnValueType `protobuf:"varint,9,rep,packed,name=value_Type,json=valueType,proto3,enum=ColumnValueType" json:"value_Type,omitempty"`
	Value      [][]byte          `protobuf:"bytes,10,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ColumnarChange) Reset() {
	*x = ColumnarChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_columnar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnarChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnarChange) ProtoMessage() {}

func (x *ColumnarChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_columnar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnarChange.ProtoReflect.Descriptor instead.
func (*ColumnarChange) Descriptor() ([]byte, []int) {
	return file_pb_columnar_proto_rawDescGZIP(), []int{2}
}

func (x *ColumnarChange) GetLookup() *ColumnarLookup {
	if x != nil {
		return x.Lookup
	}
	return nil
}

func (x *ColumnarChange) GetSite() []int64 {
	if x != nil {
		return x.Site
	}
	return nil
}

func (x *ColumnarChange) GetClock() []int64 {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *ColumnarChange) GetNode() []int64 {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ColumnarChange) GetParent() []int64 {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *ColumnarChange) GetLeftSite() []int64 {
	if x != nil {
		return x.LeftSite
	}
	return nil
}

func (x *ColumnarChange) GetLeftClock() []int64 {
	if x != nil {
		return x.LeftClock
	}
	return nil
}

func (x *ColumnarChange) GetKey() []int64 {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ColumnarChange) GetValue_Type() []ColumnValueType {
	if x != nil {
		return x.Value_Type
	}
	return nil
}

func (x *ColumnarChange) GetValue() [][]byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_pb_columnar_proto protoreflect.FileDescriptor

var file_pb_columnar_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x05, 0x0a, 0x03, 0x52, 0x4c, 0x45, 0x22, 0xa2, 0x02, 0x0a,
	0x0e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x61, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65,
	0x66, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6c,
	0x65, 0x66, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2a, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x02, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x3b, 0x6d, 0x74, 0x61, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_columnar_proto_rawDescOnce sync.Once
	file_pb_columnar_proto_rawDescData = file_pb_columnar_proto_rawDesc
)

func file_pb_columnar_proto_rawDescGZIP() []byte {
	file_pb_columnar_proto_rawDescOnce.Do(func() {
		file_pb_columnar_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_columnar_proto_rawDescData)
	})
	return file_pb_columnar_proto_rawDescData
}

var file_pb_columnar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_columnar_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_columnar_proto_goTypes = []interface{}{
	(ColumnValueType)(0),   // 0: ColumnValueType
	(*ColumnarLookup)(nil), // 1: ColumnarLookup
	(*RLE)(nil),            // 2: RLE
	(*ColumnarChange)(nil), // 3: ColumnarChange
}
var file_pb_columnar_proto_depIdxs = []int32{
	1, // 0: ColumnarChange.lookup:type_name -> ColumnarLookup
	0, // 1: ColumnarChange.value_Type:type_name -> ColumnValueType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_columnar_proto_init() }
func file_pb_columnar_proto_init() {
	if File_pb_columnar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_columnar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnarLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_columnar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RLE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_columnar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnarChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_columnar_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_columnar_proto_goTypes,
		DependencyIndexes: file_pb_columnar_proto_depIdxs,
		EnumInfos:         file_pb_columnar_proto_enumTypes,
		MessageInfos:      file_pb_columnar_proto_msgTypes,
	}.Build()
	File_pb_columnar_proto = out.File
	file_pb_columnar_proto_rawDesc = nil
	file_pb_columnar_proto_goTypes = nil
	file_pb_columnar_proto_depIdxs = nil
}
