// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HandshakeRequest struct {
	// Profile of the request initiator.
	Profile              *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeRequest) Reset()         { *m = HandshakeRequest{} }
func (m *HandshakeRequest) String() string { return proto.CompactTextString(m) }
func (*HandshakeRequest) ProtoMessage()    {}
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{0}
}

func (m *HandshakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeRequest.Unmarshal(m, b)
}
func (m *HandshakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeRequest.Marshal(b, m, deterministic)
}
func (m *HandshakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeRequest.Merge(m, src)
}
func (m *HandshakeRequest) XXX_Size() int {
	return xxx_messageInfo_HandshakeRequest.Size(m)
}
func (m *HandshakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeRequest proto.InternalMessageInfo

func (m *HandshakeRequest) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type HandshakeResponse struct {
	// Profile of the responding peer.
	Profile              *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeResponse) Reset()         { *m = HandshakeResponse{} }
func (m *HandshakeResponse) String() string { return proto.CompactTextString(m) }
func (*HandshakeResponse) ProtoMessage()    {}
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{1}
}

func (m *HandshakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeResponse.Unmarshal(m, b)
}
func (m *HandshakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeResponse.Marshal(b, m, deterministic)
}
func (m *HandshakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeResponse.Merge(m, src)
}
func (m *HandshakeResponse) XXX_Size() int {
	return xxx_messageInfo_HandshakeResponse.Size(m)
}
func (m *HandshakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeResponse proto.InternalMessageInfo

func (m *HandshakeResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{2}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{3}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

type GetProfileRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProfileRequest) Reset()         { *m = GetProfileRequest{} }
func (m *GetProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetProfileRequest) ProtoMessage()    {}
func (*GetProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{4}
}

func (m *GetProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfileRequest.Unmarshal(m, b)
}
func (m *GetProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfileRequest.Marshal(b, m, deterministic)
}
func (m *GetProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfileRequest.Merge(m, src)
}
func (m *GetProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetProfileRequest.Size(m)
}
func (m *GetProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfileRequest proto.InternalMessageInfo

type ListPublicationsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPublicationsRequest) Reset()         { *m = ListPublicationsRequest{} }
func (m *ListPublicationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPublicationsRequest) ProtoMessage()    {}
func (*ListPublicationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{5}
}

func (m *ListPublicationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPublicationsRequest.Unmarshal(m, b)
}
func (m *ListPublicationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPublicationsRequest.Marshal(b, m, deterministic)
}
func (m *ListPublicationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPublicationsRequest.Merge(m, src)
}
func (m *ListPublicationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPublicationsRequest.Size(m)
}
func (m *ListPublicationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPublicationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPublicationsRequest proto.InternalMessageInfo

type ListPublicationsResponse struct {
	// List of all the publications of this author.
	PublicationIds       []string `protobuf:"bytes,1,rep,name=publication_ids,json=publicationIds,proto3" json:"publication_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPublicationsResponse) Reset()         { *m = ListPublicationsResponse{} }
func (m *ListPublicationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPublicationsResponse) ProtoMessage()    {}
func (*ListPublicationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{6}
}

func (m *ListPublicationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPublicationsResponse.Unmarshal(m, b)
}
func (m *ListPublicationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPublicationsResponse.Marshal(b, m, deterministic)
}
func (m *ListPublicationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPublicationsResponse.Merge(m, src)
}
func (m *ListPublicationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPublicationsResponse.Size(m)
}
func (m *ListPublicationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPublicationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPublicationsResponse proto.InternalMessageInfo

func (m *ListPublicationsResponse) GetPublicationIds() []string {
	if m != nil {
		return m.PublicationIds
	}
	return nil
}

type Profile struct {
	// ID of the libp2p peer.
	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// ID of the Mintter account.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Human readable username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// Optional. Public email.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// Optional. Public bio.
	Bio string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
	// Account's public key.
	AccountPubKey        []byte   `protobuf:"bytes,6,opt,name=account_pub_key,json=accountPubKey,proto3" json:"account_pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{7}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Profile) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Profile) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Profile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *Profile) GetAccountPubKey() []byte {
	if m != nil {
		return m.AccountPubKey
	}
	return nil
}

func init() {
	proto.RegisterType((*HandshakeRequest)(nil), "mintter.p2p.HandshakeRequest")
	proto.RegisterType((*HandshakeResponse)(nil), "mintter.p2p.HandshakeResponse")
	proto.RegisterType((*PingRequest)(nil), "mintter.p2p.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "mintter.p2p.PingResponse")
	proto.RegisterType((*GetProfileRequest)(nil), "mintter.p2p.GetProfileRequest")
	proto.RegisterType((*ListPublicationsRequest)(nil), "mintter.p2p.ListPublicationsRequest")
	proto.RegisterType((*ListPublicationsResponse)(nil), "mintter.p2p.ListPublicationsResponse")
	proto.RegisterType((*Profile)(nil), "mintter.p2p.Profile")
}

func init() {
	proto.RegisterFile("p2p.proto", fileDescriptor_e7fdddb109e6467a)
}

var fileDescriptor_e7fdddb109e6467a = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc9, 0x8e, 0x9b, 0x40,
	0x10, 0x86, 0x85, 0x3d, 0x63, 0x0f, 0xc5, 0x2c, 0x9e, 0xce, 0x48, 0xd3, 0x83, 0xe4, 0xc8, 0x42,
	0x59, 0x7c, 0xe2, 0x40, 0x8e, 0xb9, 0xd9, 0x87, 0xc4, 0x49, 0x0e, 0x88, 0xdc, 0x72, 0x41, 0x2c,
	0x95, 0xa4, 0x65, 0xdc, 0x74, 0xe8, 0x26, 0x92, 0x1f, 0x2a, 0x4f, 0x90, 0x97, 0x8b, 0x80, 0xc6,
	0x06, 0x2f, 0xca, 0xdc, 0xa8, 0xff, 0xaf, 0x4d, 0xf5, 0x35, 0x60, 0x0a, 0x4f, 0xb8, 0xa2, 0xc8,
	0x55, 0x4e, 0xac, 0x0d, 0xe3, 0x4a, 0x61, 0xe1, 0x0a, 0x4f, 0x38, 0x0b, 0x98, 0x7c, 0x8c, 0x78,
	0x2a, 0x7f, 0x46, 0x6b, 0x0c, 0xf0, 0x57, 0x89, 0x52, 0x11, 0x17, 0xc6, 0xa2, 0xc8, 0xbf, 0xb3,
	0x0c, 0xa9, 0x31, 0x33, 0xe6, 0x96, 0xf7, 0xe0, 0x76, 0x4a, 0x5c, 0xbf, 0xf1, 0x82, 0x36, 0xc9,
	0x59, 0xc2, 0x7d, 0xa7, 0x87, 0x14, 0x39, 0x97, 0xd8, 0x6d, 0x32, 0x78, 0x4e, 0x93, 0x1b, 0xb0,
	0x7c, 0xc6, 0x7f, 0xe8, 0x1d, 0x9c, 0x5b, 0xb8, 0x6e, 0xc2, 0xa6, 0x9d, 0xf3, 0x02, 0xee, 0x3f,
	0xa0, 0x6a, 0xab, 0x74, 0xd2, 0x13, 0x3c, 0x7e, 0x61, 0x52, 0xf9, 0x65, 0x9c, 0xb1, 0x24, 0x52,
	0x2c, 0xe7, 0xb2, 0xb5, 0x96, 0x40, 0x8f, 0x2d, 0xbd, 0xda, 0x5b, 0xb8, 0x13, 0x7b, 0x3d, 0x64,
	0xa9, 0xa4, 0xc6, 0x6c, 0x38, 0x37, 0x83, 0xdb, 0x8e, 0xbc, 0x4a, 0xa5, 0xf3, 0xc7, 0x80, 0xb1,
	0x1e, 0x49, 0x1e, 0x61, 0x2c, 0x10, 0x8b, 0x90, 0xa5, 0xf5, 0x51, 0xcc, 0x60, 0x54, 0x85, 0xab,
	0x94, 0x4c, 0x01, 0xa2, 0x24, 0xc9, 0x4b, 0xae, 0x2a, 0x6f, 0x50, 0x7b, 0xa6, 0x56, 0x56, 0x29,
	0xb1, 0xe1, 0xaa, 0x94, 0x58, 0xf0, 0x68, 0x83, 0x74, 0x58, 0x9b, 0xbb, 0x98, 0x3c, 0xc0, 0x25,
	0x6e, 0x22, 0x96, 0xd1, 0x8b, 0xda, 0x68, 0x02, 0x32, 0x81, 0x61, 0xcc, 0x72, 0x7a, 0x59, 0x6b,
	0xd5, 0x27, 0x79, 0x03, 0x77, 0xed, 0x08, 0x51, 0xc6, 0xe1, 0x1a, 0xb7, 0x74, 0x34, 0x33, 0xe6,
	0xd7, 0xc1, 0x8d, 0x96, 0xfd, 0x32, 0xfe, 0x8c, 0x5b, 0xef, 0xef, 0x00, 0x2c, 0x1f, 0xb1, 0xf8,
	0x8a, 0xc5, 0x6f, 0x96, 0x20, 0xf9, 0x04, 0xe6, 0x0e, 0x0c, 0x99, 0xf6, 0xee, 0x7f, 0x08, 0xdd,
	0x7e, 0x79, 0xce, 0xd6, 0x47, 0x7b, 0x0f, 0x17, 0x15, 0x10, 0x42, 0xfb, 0x18, 0xf7, 0xc8, 0xec,
	0xa7, 0x13, 0x8e, 0x2e, 0x5e, 0x00, 0xec, 0xe9, 0x91, 0xfe, 0xa8, 0x23, 0xac, 0xf6, 0xc9, 0x97,
	0x42, 0x42, 0x98, 0x1c, 0x12, 0x25, 0xaf, 0x7a, 0x99, 0x67, 0xde, 0x82, 0xfd, 0xfa, 0x3f, 0x59,
	0xcd, 0x92, 0x0b, 0xf8, 0x76, 0xc5, 0xb8, 0xaa, 0xd0, 0x64, 0xf1, 0xa8, 0xfe, 0x55, 0xde, 0xfd,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xec, 0xb0, 0x8a, 0xd4, 0x37, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PeerServiceClient is the client API for PeerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeerServiceClient interface {
	// Handshake performs profile exchange for the first time between peers.
	// This should ideally only happen once between a given pair of peers.
	Handshake(ctx context.Context, in *HandshakeRequest, opts ...grpc.CallOption) (*HandshakeResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	ListPublications(ctx context.Context, in *ListPublicationsRequest, opts ...grpc.CallOption) (*ListPublicationsResponse, error)
}

type peerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPeerServiceClient(cc grpc.ClientConnInterface) PeerServiceClient {
	return &peerServiceClient{cc}
}

func (c *peerServiceClient) Handshake(ctx context.Context, in *HandshakeRequest, opts ...grpc.CallOption) (*HandshakeResponse, error) {
	out := new(HandshakeResponse)
	err := c.cc.Invoke(ctx, "/mintter.p2p.PeerService/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/mintter.p2p.PeerService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/mintter.p2p.PeerService/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerServiceClient) ListPublications(ctx context.Context, in *ListPublicationsRequest, opts ...grpc.CallOption) (*ListPublicationsResponse, error) {
	out := new(ListPublicationsResponse)
	err := c.cc.Invoke(ctx, "/mintter.p2p.PeerService/ListPublications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PeerServiceServer is the server API for PeerService service.
type PeerServiceServer interface {
	// Handshake performs profile exchange for the first time between peers.
	// This should ideally only happen once between a given pair of peers.
	Handshake(context.Context, *HandshakeRequest) (*HandshakeResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	ListPublications(context.Context, *ListPublicationsRequest) (*ListPublicationsResponse, error)
}

// UnimplementedPeerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPeerServiceServer struct {
}

func (*UnimplementedPeerServiceServer) Handshake(ctx context.Context, req *HandshakeRequest) (*HandshakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handshake not implemented")
}
func (*UnimplementedPeerServiceServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedPeerServiceServer) GetProfile(ctx context.Context, req *GetProfileRequest) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedPeerServiceServer) ListPublications(ctx context.Context, req *ListPublicationsRequest) (*ListPublicationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPublications not implemented")
}

func RegisterPeerServiceServer(s *grpc.Server, srv PeerServiceServer) {
	s.RegisterService(&_PeerService_serviceDesc, srv)
}

func _PeerService_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandshakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServiceServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mintter.p2p.PeerService/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServiceServer).Handshake(ctx, req.(*HandshakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mintter.p2p.PeerService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mintter.p2p.PeerService/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServiceServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerService_ListPublications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPublicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServiceServer).ListPublications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mintter.p2p.PeerService/ListPublications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServiceServer).ListPublications(ctx, req.(*ListPublicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PeerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mintter.p2p.PeerService",
	HandlerType: (*PeerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _PeerService_Handshake_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _PeerService_Ping_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _PeerService_GetProfile_Handler,
		},
		{
			MethodName: "ListPublications",
			Handler:    _PeerService_ListPublications_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "p2p.proto",
}
