syntax = "proto3";

package mintter.p2p;

option go_package = "mintter/backend/p2p/internal;internal";

service PeerService {
  // Handshake performs profile exchange for the first time between peers.
  // This should ideally only happen once between a given pair of peers.
  rpc Handshake(HandshakeRequest) returns (HandshakeResponse);

  rpc Ping(PingRequest) returns (PingResponse);

  rpc GetProfile(GetProfileRequest) returns (Profile);

  rpc ListProfiles(ListProfilesRequest) returns (ListProfilesResponse);
}

message HandshakeRequest {
  // Profile of the request initiator.
  Profile profile = 1;
}

message HandshakeResponse {
  // Profile of the responding peer.
  Profile profile = 2;
}

message PingRequest {}

message PingResponse {}

message GetProfileRequest {}

message ListProfilesRequest {
  int32 page_size = 1;

  string page_token = 2;
}

message ListProfilesResponse {
  repeated Profile profiles = 1;

  string next_page_token = 2;
}

message Profile {
  // ID of the libp2p peer.
  string peer_id = 1;

  // ID of the Mintter account.
  string account_id = 2;

  // Human readable username.
  string username = 3;

  // Optional. Public email.
  string email = 4;

  // Optional. Public bio.
  string bio = 5;

  // Account's public key.
  bytes account_pub_key = 6;
}
