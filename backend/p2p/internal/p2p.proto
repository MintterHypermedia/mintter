syntax = "proto3";

package mintter.p2p;

option go_package = "internal";

service PeerService {
  // Handshake performs profile exchange for the first time between peers.
  // This should ideally only happen once between a given pair of peers.
  rpc Handshake(HandshakeRequest) returns (HandshakeResponse) {}

  rpc Ping(PingRequest) returns (PingResponse) {}

  rpc GetProfile(GetProfileRequest) returns (Profile) {}

  rpc GetLogRecords(GetLogRecordsRequest) returns (GetLogRecordsResponse) {}
}

message HandshakeRequest {
  // Profile of the request initiator.
  Profile profile = 1;
}

message HandshakeResponse {
  // Profile of the responding peer.
  Profile profile = 2;
}

message PingRequest {}

message PingResponse {}

message GetProfileRequest {}

message GetLogRecordsRequest {
  // Log name in form of <account-id>/<log-name>
  string log_name = 1;

  // Only return records that starts from this sequence number (inclusive).
  int64 start_seq = 2;

  // Limit number of records to return.
  int64 limit = 3;
}

message GetLogRecordsResponse {
  string log_name = 1;

  repeated LogRecord records = 2;
}

message LogRecord {
  int64 seq = 1;

  bytes data = 2;
}

message Profile {
  // ID of the libp2p peer.
  string peer_id = 1;

  // ID of the Mintter account.
  string account_id = 2;

  // Human readable username.
  string username = 3;

  // Optional. Public email.
  string email = 4;

  // Optional. Public bio.
  string bio = 5;
}
