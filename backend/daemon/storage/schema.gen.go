// Code generated by sqlitegen. DO NOT EDIT.

package storage

import (
	"mintter/backend/pkg/sqlitegen"
)

// Table blob_attrs.
const (
	BlobAttrs         sqlitegen.Table  = "blob_attrs"
	BlobAttrsAnchor   sqlitegen.Column = "blob_attrs.anchor"
	BlobAttrsBlob     sqlitegen.Column = "blob_attrs.blob"
	BlobAttrsExtra    sqlitegen.Column = "blob_attrs.extra"
	BlobAttrsIsLookup sqlitegen.Column = "blob_attrs.is_lookup"
	BlobAttrsKey      sqlitegen.Column = "blob_attrs.key"
	BlobAttrsTs       sqlitegen.Column = "blob_attrs.ts"
	BlobAttrsValue    sqlitegen.Column = "blob_attrs.value"
	BlobAttrsValuePtr sqlitegen.Column = "blob_attrs.value_ptr"
)

// Table blob_attrs. Plain strings.
const (
	T_BlobAttrs         = "blob_attrs"
	C_BlobAttrsAnchor   = "blob_attrs.anchor"
	C_BlobAttrsBlob     = "blob_attrs.blob"
	C_BlobAttrsExtra    = "blob_attrs.extra"
	C_BlobAttrsIsLookup = "blob_attrs.is_lookup"
	C_BlobAttrsKey      = "blob_attrs.key"
	C_BlobAttrsTs       = "blob_attrs.ts"
	C_BlobAttrsValue    = "blob_attrs.value"
	C_BlobAttrsValuePtr = "blob_attrs.value_ptr"
)

// Table blob_links.
const (
	BlobLinks       sqlitegen.Table  = "blob_links"
	BlobLinksRel    sqlitegen.Column = "blob_links.rel"
	BlobLinksSource sqlitegen.Column = "blob_links.source"
	BlobLinksTarget sqlitegen.Column = "blob_links.target"
)

// Table blob_links. Plain strings.
const (
	T_BlobLinks       = "blob_links"
	C_BlobLinksRel    = "blob_links.rel"
	C_BlobLinksSource = "blob_links.source"
	C_BlobLinksTarget = "blob_links.target"
)

// Table blobs.
const (
	Blobs           sqlitegen.Table  = "blobs"
	BlobsCodec      sqlitegen.Column = "blobs.codec"
	BlobsData       sqlitegen.Column = "blobs.data"
	BlobsID         sqlitegen.Column = "blobs.id"
	BlobsInsertTime sqlitegen.Column = "blobs.insert_time"
	BlobsMultihash  sqlitegen.Column = "blobs.multihash"
	BlobsSize       sqlitegen.Column = "blobs.size"
)

// Table blobs. Plain strings.
const (
	T_Blobs           = "blobs"
	C_BlobsCodec      = "blobs.codec"
	C_BlobsData       = "blobs.data"
	C_BlobsID         = "blobs.id"
	C_BlobsInsertTime = "blobs.insert_time"
	C_BlobsMultihash  = "blobs.multihash"
	C_BlobsSize       = "blobs.size"
)

// Table change_deps.
const (
	ChangeDeps       sqlitegen.Table  = "change_deps"
	ChangeDepsChild  sqlitegen.Column = "change_deps.child"
	ChangeDepsParent sqlitegen.Column = "change_deps.parent"
)

// Table change_deps. Plain strings.
const (
	T_ChangeDeps       = "change_deps"
	C_ChangeDepsChild  = "change_deps.child"
	C_ChangeDepsParent = "change_deps.parent"
)

// Table changes.
const (
	Changes        sqlitegen.Table  = "changes"
	ChangesAuthor  sqlitegen.Column = "changes.author"
	ChangesBlob    sqlitegen.Column = "changes.blob"
	ChangesEntity  sqlitegen.Column = "changes.entity"
	ChangesHLCTime sqlitegen.Column = "changes.hlc_time"
)

// Table changes. Plain strings.
const (
	T_Changes        = "changes"
	C_ChangesAuthor  = "changes.author"
	C_ChangesBlob    = "changes.blob"
	C_ChangesEntity  = "changes.entity"
	C_ChangesHLCTime = "changes.hlc_time"
)

// Table changes_view.
const (
	ChangesView          sqlitegen.Table  = "changes_view"
	ChangesViewBlobID    sqlitegen.Column = "changes_view.blob_id"
	ChangesViewCodec     sqlitegen.Column = "changes_view.codec"
	ChangesViewData      sqlitegen.Column = "changes_view.data"
	ChangesViewEntity    sqlitegen.Column = "changes_view.entity"
	ChangesViewEntityID  sqlitegen.Column = "changes_view.entity_id"
	ChangesViewHLCTime   sqlitegen.Column = "changes_view.hlc_time"
	ChangesViewMultihash sqlitegen.Column = "changes_view.multihash"
	ChangesViewSize      sqlitegen.Column = "changes_view.size"
)

// Table changes_view. Plain strings.
const (
	T_ChangesView          = "changes_view"
	C_ChangesViewBlobID    = "changes_view.blob_id"
	C_ChangesViewCodec     = "changes_view.codec"
	C_ChangesViewData      = "changes_view.data"
	C_ChangesViewEntity    = "changes_view.entity"
	C_ChangesViewEntityID  = "changes_view.entity_id"
	C_ChangesViewHLCTime   = "changes_view.hlc_time"
	C_ChangesViewMultihash = "changes_view.multihash"
	C_ChangesViewSize      = "changes_view.size"
)

// Table drafts.
const (
	Drafts       sqlitegen.Table  = "drafts"
	DraftsBlob   sqlitegen.Column = "drafts.blob"
	DraftsEntity sqlitegen.Column = "drafts.entity"
)

// Table drafts. Plain strings.
const (
	T_Drafts       = "drafts"
	C_DraftsBlob   = "drafts.blob"
	C_DraftsEntity = "drafts.entity"
)

// Table drafts_view.
const (
	DraftsView          sqlitegen.Table  = "drafts_view"
	DraftsViewBlobID    sqlitegen.Column = "drafts_view.blob_id"
	DraftsViewCodec     sqlitegen.Column = "drafts_view.codec"
	DraftsViewEntity    sqlitegen.Column = "drafts_view.entity"
	DraftsViewEntityID  sqlitegen.Column = "drafts_view.entity_id"
	DraftsViewMultihash sqlitegen.Column = "drafts_view.multihash"
)

// Table drafts_view. Plain strings.
const (
	T_DraftsView          = "drafts_view"
	C_DraftsViewBlobID    = "drafts_view.blob_id"
	C_DraftsViewCodec     = "drafts_view.codec"
	C_DraftsViewEntity    = "drafts_view.entity"
	C_DraftsViewEntityID  = "drafts_view.entity_id"
	C_DraftsViewMultihash = "drafts_view.multihash"
)

// Table entities.
const (
	Entities    sqlitegen.Table  = "entities"
	EntitiesEID sqlitegen.Column = "entities.eid"
	EntitiesID  sqlitegen.Column = "entities.id"
)

// Table entities. Plain strings.
const (
	T_Entities    = "entities"
	C_EntitiesEID = "entities.eid"
	C_EntitiesID  = "entities.id"
)

// Table heads.
const (
	Heads         sqlitegen.Table  = "heads"
	HeadsBlob     sqlitegen.Column = "heads.blob"
	HeadsName     sqlitegen.Column = "heads.name"
	HeadsResource sqlitegen.Column = "heads.resource"
)

// Table heads. Plain strings.
const (
	T_Heads         = "heads"
	C_HeadsBlob     = "heads.blob"
	C_HeadsName     = "heads.name"
	C_HeadsResource = "heads.resource"
)

// Table invite_tokens.
const (
	InviteTokens           sqlitegen.Table  = "invite_tokens"
	InviteTokensExpireTime sqlitegen.Column = "invite_tokens.expire_time"
	InviteTokensRole       sqlitegen.Column = "invite_tokens.role"
	InviteTokensToken      sqlitegen.Column = "invite_tokens.token"
)

// Table invite_tokens. Plain strings.
const (
	T_InviteTokens           = "invite_tokens"
	C_InviteTokensExpireTime = "invite_tokens.expire_time"
	C_InviteTokensRole       = "invite_tokens.role"
	C_InviteTokensToken      = "invite_tokens.token"
)

// Table key_delegations.
const (
	KeyDelegations         sqlitegen.Table  = "key_delegations"
	KeyDelegationsBlob     sqlitegen.Column = "key_delegations.blob"
	KeyDelegationsDelegate sqlitegen.Column = "key_delegations.delegate"
	KeyDelegationsIssuer   sqlitegen.Column = "key_delegations.issuer"
)

// Table key_delegations. Plain strings.
const (
	T_KeyDelegations         = "key_delegations"
	C_KeyDelegationsBlob     = "key_delegations.blob"
	C_KeyDelegationsDelegate = "key_delegations.delegate"
	C_KeyDelegationsIssuer   = "key_delegations.issuer"
)

// Table key_delegations_view.
const (
	KeyDelegationsView              sqlitegen.Table  = "key_delegations_view"
	KeyDelegationsViewBlob          sqlitegen.Column = "key_delegations_view.blob"
	KeyDelegationsViewBlobCodec     sqlitegen.Column = "key_delegations_view.blob_codec"
	KeyDelegationsViewBlobMultihash sqlitegen.Column = "key_delegations_view.blob_multihash"
	KeyDelegationsViewDelegate      sqlitegen.Column = "key_delegations_view.delegate"
	KeyDelegationsViewIssuer        sqlitegen.Column = "key_delegations_view.issuer"
)

// Table key_delegations_view. Plain strings.
const (
	T_KeyDelegationsView              = "key_delegations_view"
	C_KeyDelegationsViewBlob          = "key_delegations_view.blob"
	C_KeyDelegationsViewBlobCodec     = "key_delegations_view.blob_codec"
	C_KeyDelegationsViewBlobMultihash = "key_delegations_view.blob_multihash"
	C_KeyDelegationsViewDelegate      = "key_delegations_view.delegate"
	C_KeyDelegationsViewIssuer        = "key_delegations_view.issuer"
)

// Table kv.
const (
	KV      sqlitegen.Table  = "kv"
	KVKey   sqlitegen.Column = "kv.key"
	KVValue sqlitegen.Column = "kv.value"
)

// Table kv. Plain strings.
const (
	T_KV      = "kv"
	C_KVKey   = "kv.key"
	C_KVValue = "kv.value"
)

// Table lookup.
const (
	Lookup      sqlitegen.Table  = "lookup"
	LookupID    sqlitegen.Column = "lookup.id"
	LookupType  sqlitegen.Column = "lookup.type"
	LookupValue sqlitegen.Column = "lookup.value"
)

// Table lookup. Plain strings.
const (
	T_Lookup      = "lookup"
	C_LookupID    = "lookup.id"
	C_LookupType  = "lookup.type"
	C_LookupValue = "lookup.value"
)

// Table public_blobs_view.
const (
	PublicBlobsView          sqlitegen.Table  = "public_blobs_view"
	PublicBlobsViewCodec     sqlitegen.Column = "public_blobs_view.codec"
	PublicBlobsViewID        sqlitegen.Column = "public_blobs_view.id"
	PublicBlobsViewMultihash sqlitegen.Column = "public_blobs_view.multihash"
)

// Table public_blobs_view. Plain strings.
const (
	T_PublicBlobsView          = "public_blobs_view"
	C_PublicBlobsViewCodec     = "public_blobs_view.codec"
	C_PublicBlobsViewID        = "public_blobs_view.id"
	C_PublicBlobsViewMultihash = "public_blobs_view.multihash"
)

// Table public_keys.
const (
	PublicKeys          sqlitegen.Table  = "public_keys"
	PublicKeysID        sqlitegen.Column = "public_keys.id"
	PublicKeysPrincipal sqlitegen.Column = "public_keys.principal"
)

// Table public_keys. Plain strings.
const (
	T_PublicKeys          = "public_keys"
	C_PublicKeysID        = "public_keys.id"
	C_PublicKeysPrincipal = "public_keys.principal"
)

// Table served_sites.
const (
	ServedSites         sqlitegen.Table  = "served_sites"
	ServedSitesGroupID  sqlitegen.Column = "served_sites.group_id"
	ServedSitesHostname sqlitegen.Column = "served_sites.hostname"
	ServedSitesOwnerID  sqlitegen.Column = "served_sites.owner_id"
	ServedSitesVersion  sqlitegen.Column = "served_sites.version"
)

// Table served_sites. Plain strings.
const (
	T_ServedSites         = "served_sites"
	C_ServedSitesGroupID  = "served_sites.group_id"
	C_ServedSitesHostname = "served_sites.hostname"
	C_ServedSitesOwnerID  = "served_sites.owner_id"
	C_ServedSitesVersion  = "served_sites.version"
)

// Table site_members.
const (
	SiteMembers          sqlitegen.Table  = "site_members"
	SiteMembersAccountID sqlitegen.Column = "site_members.account_id"
	SiteMembersRole      sqlitegen.Column = "site_members.role"
)

// Table site_members. Plain strings.
const (
	T_SiteMembers          = "site_members"
	C_SiteMembersAccountID = "site_members.account_id"
	C_SiteMembersRole      = "site_members.role"
)

// Table sites.
const (
	Sites          sqlitegen.Table  = "sites"
	SitesAccountID sqlitegen.Column = "sites.account_id"
	SitesAddresses sqlitegen.Column = "sites.addresses"
	SitesHostname  sqlitegen.Column = "sites.hostname"
	SitesRole      sqlitegen.Column = "sites.role"
)

// Table sites. Plain strings.
const (
	T_Sites          = "sites"
	C_SitesAccountID = "sites.account_id"
	C_SitesAddresses = "sites.addresses"
	C_SitesHostname  = "sites.hostname"
	C_SitesRole      = "sites.role"
)

// Table sqlite_sequence.
const (
	SQLiteSequence     sqlitegen.Table  = "sqlite_sequence"
	SQLiteSequenceName sqlitegen.Column = "sqlite_sequence.name"
	SQLiteSequenceSeq  sqlitegen.Column = "sqlite_sequence.seq"
)

// Table sqlite_sequence. Plain strings.
const (
	T_SQLiteSequence     = "sqlite_sequence"
	C_SQLiteSequenceName = "sqlite_sequence.name"
	C_SQLiteSequenceSeq  = "sqlite_sequence.seq"
)

// Table trusted_accounts.
const (
	TrustedAccounts   sqlitegen.Table  = "trusted_accounts"
	TrustedAccountsID sqlitegen.Column = "trusted_accounts.id"
)

// Table trusted_accounts. Plain strings.
const (
	T_TrustedAccounts   = "trusted_accounts"
	C_TrustedAccountsID = "trusted_accounts.id"
)

// Table wallets.
const (
	Wallets         sqlitegen.Table  = "wallets"
	WalletsAddress  sqlitegen.Column = "wallets.address"
	WalletsBalance  sqlitegen.Column = "wallets.balance"
	WalletsID       sqlitegen.Column = "wallets.id"
	WalletsLogin    sqlitegen.Column = "wallets.login"
	WalletsName     sqlitegen.Column = "wallets.name"
	WalletsPassword sqlitegen.Column = "wallets.password"
	WalletsToken    sqlitegen.Column = "wallets.token"
	WalletsType     sqlitegen.Column = "wallets.type"
)

// Table wallets. Plain strings.
const (
	T_Wallets         = "wallets"
	C_WalletsAddress  = "wallets.address"
	C_WalletsBalance  = "wallets.balance"
	C_WalletsID       = "wallets.id"
	C_WalletsLogin    = "wallets.login"
	C_WalletsName     = "wallets.name"
	C_WalletsPassword = "wallets.password"
	C_WalletsToken    = "wallets.token"
	C_WalletsType     = "wallets.type"
)

// Table web_publications.
const (
	WebPublications        sqlitegen.Table  = "web_publications"
	WebPublicationsEID     sqlitegen.Column = "web_publications.eid"
	WebPublicationsPath    sqlitegen.Column = "web_publications.path"
	WebPublicationsVersion sqlitegen.Column = "web_publications.version"
)

// Table web_publications. Plain strings.
const (
	T_WebPublications        = "web_publications"
	C_WebPublicationsEID     = "web_publications.eid"
	C_WebPublicationsPath    = "web_publications.path"
	C_WebPublicationsVersion = "web_publications.version"
)

// Schema describes SQLite columns.
var Schema = sqlitegen.Schema{
	Columns: map[sqlitegen.Column]sqlitegen.ColumnInfo{
		BlobAttrsAnchor:                 {Table: BlobAttrs, SQLType: "TEXT"},
		BlobAttrsBlob:                   {Table: BlobAttrs, SQLType: "INTEGER"},
		BlobAttrsExtra:                  {Table: BlobAttrs, SQLType: ""},
		BlobAttrsIsLookup:               {Table: BlobAttrs, SQLType: "INTEGER"},
		BlobAttrsKey:                    {Table: BlobAttrs, SQLType: "TEXT"},
		BlobAttrsTs:                     {Table: BlobAttrs, SQLType: "INTEGER"},
		BlobAttrsValue:                  {Table: BlobAttrs, SQLType: ""},
		BlobAttrsValuePtr:               {Table: BlobAttrs, SQLType: "INTEGER"},
		BlobLinksRel:                    {Table: BlobLinks, SQLType: "TEXT"},
		BlobLinksSource:                 {Table: BlobLinks, SQLType: "INTEGER"},
		BlobLinksTarget:                 {Table: BlobLinks, SQLType: "INTEGER"},
		BlobsCodec:                      {Table: Blobs, SQLType: "INTEGER"},
		BlobsData:                       {Table: Blobs, SQLType: "BLOB"},
		BlobsID:                         {Table: Blobs, SQLType: "INTEGER"},
		BlobsInsertTime:                 {Table: Blobs, SQLType: "INTEGER"},
		BlobsMultihash:                  {Table: Blobs, SQLType: "BLOB"},
		BlobsSize:                       {Table: Blobs, SQLType: "INTEGER"},
		ChangeDepsChild:                 {Table: ChangeDeps, SQLType: "INTEGER"},
		ChangeDepsParent:                {Table: ChangeDeps, SQLType: "INTEGER"},
		ChangesAuthor:                   {Table: Changes, SQLType: "INTEGER"},
		ChangesBlob:                     {Table: Changes, SQLType: "INTEGER"},
		ChangesEntity:                   {Table: Changes, SQLType: "INTEGER"},
		ChangesHLCTime:                  {Table: Changes, SQLType: "INTEGER"},
		ChangesViewBlobID:               {Table: ChangesView, SQLType: "INTEGER"},
		ChangesViewCodec:                {Table: ChangesView, SQLType: "INTEGER"},
		ChangesViewData:                 {Table: ChangesView, SQLType: "BLOB"},
		ChangesViewEntity:               {Table: ChangesView, SQLType: "BLOB"},
		ChangesViewEntityID:             {Table: ChangesView, SQLType: "INTEGER"},
		ChangesViewHLCTime:              {Table: ChangesView, SQLType: "INTEGER"},
		ChangesViewMultihash:            {Table: ChangesView, SQLType: "BLOB"},
		ChangesViewSize:                 {Table: ChangesView, SQLType: "INTEGER"},
		DraftsBlob:                      {Table: Drafts, SQLType: "INTEGER"},
		DraftsEntity:                    {Table: Drafts, SQLType: "INTEGER"},
		DraftsViewBlobID:                {Table: DraftsView, SQLType: "INTEGER"},
		DraftsViewCodec:                 {Table: DraftsView, SQLType: "INTEGER"},
		DraftsViewEntity:                {Table: DraftsView, SQLType: "BLOB"},
		DraftsViewEntityID:              {Table: DraftsView, SQLType: "INTEGER"},
		DraftsViewMultihash:             {Table: DraftsView, SQLType: "BLOB"},
		EntitiesEID:                     {Table: Entities, SQLType: "BLOB"},
		EntitiesID:                      {Table: Entities, SQLType: "INTEGER"},
		HeadsBlob:                       {Table: Heads, SQLType: "INTEGER"},
		HeadsName:                       {Table: Heads, SQLType: "TEXT"},
		HeadsResource:                   {Table: Heads, SQLType: "INTEGER"},
		InviteTokensExpireTime:          {Table: InviteTokens, SQLType: "INTEGER"},
		InviteTokensRole:                {Table: InviteTokens, SQLType: "INTEGER"},
		InviteTokensToken:               {Table: InviteTokens, SQLType: "TEXT"},
		KeyDelegationsBlob:              {Table: KeyDelegations, SQLType: "INTEGER"},
		KeyDelegationsDelegate:          {Table: KeyDelegations, SQLType: ""},
		KeyDelegationsIssuer:            {Table: KeyDelegations, SQLType: ""},
		KeyDelegationsViewBlob:          {Table: KeyDelegationsView, SQLType: "INTEGER"},
		KeyDelegationsViewBlobCodec:     {Table: KeyDelegationsView, SQLType: "INTEGER"},
		KeyDelegationsViewBlobMultihash: {Table: KeyDelegationsView, SQLType: "BLOB"},
		KeyDelegationsViewDelegate:      {Table: KeyDelegationsView, SQLType: "BLOB"},
		KeyDelegationsViewIssuer:        {Table: KeyDelegationsView, SQLType: "BLOB"},
		KVKey:                           {Table: KV, SQLType: "TEXT"},
		KVValue:                         {Table: KV, SQLType: "TEXT"},
		LookupID:                        {Table: Lookup, SQLType: "INTEGER"},
		LookupType:                      {Table: Lookup, SQLType: "INTEGER"},
		LookupValue:                     {Table: Lookup, SQLType: ""},
		PublicBlobsViewCodec:            {Table: PublicBlobsView, SQLType: "INTEGER"},
		PublicBlobsViewID:               {Table: PublicBlobsView, SQLType: "INTEGER"},
		PublicBlobsViewMultihash:        {Table: PublicBlobsView, SQLType: "BLOB"},
		PublicKeysID:                    {Table: PublicKeys, SQLType: "INTEGER"},
		PublicKeysPrincipal:             {Table: PublicKeys, SQLType: "BLOB"},
		ServedSitesGroupID:              {Table: ServedSites, SQLType: "INTEGER"},
		ServedSitesHostname:             {Table: ServedSites, SQLType: "TEXT"},
		ServedSitesOwnerID:              {Table: ServedSites, SQLType: "INTEGER"},
		ServedSitesVersion:              {Table: ServedSites, SQLType: "TEXT"},
		SiteMembersAccountID:            {Table: SiteMembers, SQLType: "INTEGER"},
		SiteMembersRole:                 {Table: SiteMembers, SQLType: "INTEGER"},
		SitesAccountID:                  {Table: Sites, SQLType: "INTEGER"},
		SitesAddresses:                  {Table: Sites, SQLType: "TEXT"},
		SitesHostname:                   {Table: Sites, SQLType: "TEXT"},
		SitesRole:                       {Table: Sites, SQLType: "INTEGER"},
		SQLiteSequenceName:              {Table: SQLiteSequence, SQLType: ""},
		SQLiteSequenceSeq:               {Table: SQLiteSequence, SQLType: ""},
		TrustedAccountsID:               {Table: TrustedAccounts, SQLType: "INTEGER"},
		WalletsAddress:                  {Table: Wallets, SQLType: "TEXT"},
		WalletsBalance:                  {Table: Wallets, SQLType: "INTEGER"},
		WalletsID:                       {Table: Wallets, SQLType: "TEXT"},
		WalletsLogin:                    {Table: Wallets, SQLType: "BLOB"},
		WalletsName:                     {Table: Wallets, SQLType: "TEXT"},
		WalletsPassword:                 {Table: Wallets, SQLType: "BLOB"},
		WalletsToken:                    {Table: Wallets, SQLType: "BLOB"},
		WalletsType:                     {Table: Wallets, SQLType: "TEXT"},
		WebPublicationsEID:              {Table: WebPublications, SQLType: "TEXT"},
		WebPublicationsPath:             {Table: WebPublications, SQLType: "TEXT"},
		WebPublicationsVersion:          {Table: WebPublications, SQLType: "TEXT"},
	},
}
